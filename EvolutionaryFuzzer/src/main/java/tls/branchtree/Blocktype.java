/**
 * TLS-Attacker - A Modular Penetration Testing Framework for TLS
 *
 * Copyright 2014-2016 Ruhr University Bochum / Hackmanit GmbH
 *
 * Licensed under Apache License 2.0 http://www.apache.org/licenses/LICENSE-2.0
 */
package tls.branchtree;

/**
 * This Class represents the Different Assembly Instructions which are
 * Instrumented by the Fuzzer, and all the Labels which an Instruction is able
 * to Branch to. Generally speaking all Instructions are Instrumented which are
 * able to Change the Controlflow of the Progam, therefore not necessarily the
 * next instruction is executed.
 *
 * @author Robert Merget - robert.merget@rub.de
 */
public enum Blocktype
{

    /**
     * Represents the RETN Instruction in Assembly.
     */
    RET,
    /**
     * Represents the CALL Instruction in Assembly.
     */
    CALL,
    /**
     * Represents a Label of a Function which can be Called.
     */
    FUNCTIONLABEL,
    /**
     * Represents a label in the AssemblyCode. These are generated by the
     * Compiler to indicate where JMP instructions etc. are able to Jump to.
     */
    LABEL,
    /**
     * Represents a conditional Jump Assembly Instruction. Like JZ, JE, JNE...
     */
    CNDJUMP,
    /**
     * Represents an unconditional Jump Assembly Instruction.
     */
    JMP
}
