11:42:34.187 [main] DEBUG de.rub.nds.tlsattacker.util.ServerStartCommandExecutor - Server successfully started.
SUN version 1.7
SunRsaSign version 1.7
SunJSSE version 1.7
SunJCE version 1.7
SunJGSS version 1.7
SunSASL version 1.7
XMLDSig version 1.0
SunPCSC version 1.7
SunPKCS11-NSS version 1.7
11:42:34.921 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - using this private key of 256 bit length
11:42:34.923 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - 81621876370632603442940437509300704111441085977373560521586039023365897398922
11:42:34.932 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - Provider: SunJSSE version 1.7
11:42:34.976 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - Supported cipher suites (80)
11:42:34.992 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
11:42:34.992 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_RSA_WITH_AES_256_CBC_SHA256
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_RSA_WITH_AES_256_CBC_SHA
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DHE_RSA_WITH_AES_256_CBC_SHA
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DHE_DSS_WITH_AES_256_CBC_SHA
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_RSA_WITH_AES_128_CBC_SHA256
11:42:34.993 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
11:42:34.994 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
11:42:34.994 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
11:42:34.994 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
11:42:34.994 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
11:42:34.994 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
11:42:34.994 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_RSA_WITH_AES_128_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DHE_RSA_WITH_AES_128_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DHE_DSS_WITH_AES_128_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_RSA_WITH_3DES_EDE_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
11:42:34.995 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_RSA_WITH_RC4_128_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_RSA_WITH_RC4_128_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_ECDSA_WITH_RC4_128_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_RSA_WITH_RC4_128_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_RSA_WITH_RC4_128_MD5
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_EMPTY_RENEGOTIATION_INFO_SCSV
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DH_anon_WITH_AES_256_CBC_SHA256
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_anon_WITH_AES_256_CBC_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DH_anon_WITH_AES_256_CBC_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DH_anon_WITH_AES_128_CBC_SHA256
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_anon_WITH_AES_128_CBC_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_DH_anon_WITH_AES_128_CBC_SHA
11:42:34.996 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_anon_WITH_RC4_128_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DH_anon_WITH_RC4_128_MD5
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_RSA_WITH_DES_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DHE_RSA_WITH_DES_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DHE_DSS_WITH_DES_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DH_anon_WITH_DES_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_RSA_EXPORT_WITH_RC4_40_MD5
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
11:42:34.997 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_RSA_WITH_NULL_SHA256
11:42:34.998 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_ECDSA_WITH_NULL_SHA
11:42:34.998 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDHE_RSA_WITH_NULL_SHA
11:42:34.998 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_RSA_WITH_NULL_SHA
11:42:34.998 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_ECDSA_WITH_NULL_SHA
11:42:34.998 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_RSA_WITH_NULL_SHA
11:42:34.998 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_ECDH_anon_WITH_NULL_SHA
11:42:34.998 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  SSL_RSA_WITH_NULL_MD5
11:42:34.998 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_WITH_3DES_EDE_CBC_SHA
11:42:35.000 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_WITH_3DES_EDE_CBC_MD5
11:42:35.012 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_WITH_RC4_128_SHA
11:42:35.012 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_WITH_RC4_128_MD5
11:42:35.012 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_WITH_DES_CBC_SHA
11:42:35.012 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_WITH_DES_CBC_MD5
11:42:35.012 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
11:42:35.012 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
11:42:35.012 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_EXPORT_WITH_RC4_40_SHA
11:42:35.012 [main] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer -  TLS_KRB5_EXPORT_WITH_RC4_40_MD5
11:42:35.012 [main] INFO  de.rub.nds.tlsattacker.tlsserver.TLSServer - SSL Server successfully initialized!
11:42:35.024 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || presetup successful
11:42:35.024 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.202 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.202 [Thread-4] DEBUG  - new Thread started
11:42:36.223 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.234 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  9E E2 3F C1 A3 AF 37 62  7C 62 C9 21 95 A1 88 A5 
  79 CD 82 06 C2 AD A8 82  BF B9 A4 C9 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:36.235 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.241 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0C 9E 
  E2 3F C1 A3 AF 37 62 7C  62 C9 21 95 A1 88 A5 79 
  CD 82 06 C2 AD A8 82 BF  B9 A4 C9 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:36.257 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:36.257 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.257 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.257 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:36.260 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Server Random: 
  3F 8F 2A F0 28 79 EF 6B  1E 42 8D 0F 3F 08 A6 AF 
  88 18 C0 1C F3 10 C6 74  BD C9 99 40 
  Session ID: 
  55 3A 10 0C C5 64 E4 C9  C5 66 FA 46 EF D8 38 10 
  12 B2 13 DD 3D EC 04 9C  53 2F A6 3E 59 46 32 0B 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:36.260 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.260 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:36.347 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:36.347 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.347 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:36.348 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:36.348 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:36.350 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:36.350 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:36.350 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:36.350 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:36.350 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:36.351 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:36.373 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:36.374 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 22592098146924918488533502591262323733859374361227307845373842113153899695776
11:42:36.374 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 55257768165938249214226834678896435364611886288540078071502135222946312115754
11:42:36.392 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  36 A1 B4 1A 0F CA EC F8  2E 51 B1 7F C7 79 6F B7 
  AD 2F A6 A2 3B 6D 68 2C  4C CE 3D BA 1E 8D 41 92 
11:42:36.395 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0C 9E E2 3F C1  A3 AF 37 62 7C 62 C9 21 
  95 A1 88 A5 79 CD 82 06  C2 AD A8 82 BF B9 A4 C9 
  55 3A 10 0C 3F 8F 2A F0  28 79 EF 6B 1E 42 8D 0F 
  3F 08 A6 AF 88 18 C0 1C  F3 10 C6 74 BD C9 99 40 
11:42:36.411 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  E0 3D FD 1E 35 18 AB 85  7A 4B F4 EE 50 DA 4B 04 
  E7 A6 7C 11 F9 CC 76 E9  B7 12 CD 77 31 B8 C0 41 
  1B EF 70 EC 5A 11 CD 34  E7 B0 5E 6D D1 56 45 67 
11:42:36.411 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:36.412 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.415 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 46 10 00 00  42 41 04 31 F2 AC A6 08 
  FA DF A1 15 6E D4 CF AF  C1 29 D7 EB 95 96 B3 31 
  C1 03 10 B3 8D 5D 70 6C  B4 0E A0 7A 2A C9 D7 8B 
  27 E4 78 94 76 CD 44 94  6C E5 1C 2D 7A 40 36 4B 
  2C B4 88 4B 7B 98 ED 0A  E2 56 2A 
11:42:36.415 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:36.416 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:36.416 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.416 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:36.416 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:36.418 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: AF 82 60 27 2F 5B 2A 2E 7B F0 C6 5C 
11:42:36.428 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  89 89 F0 C4 D9 53 1E BA  EB 55 29 12 37 26 1E F7 
  14 A1 94 04 37 39 68 10  50 16 E6 4A AA 4B 97 D7 
  27 EB B3 93 F7 81 29 21  87 00 0B 59 67 FF 1A D1 
  E9 54 19 14 A2 1C 01 9E  56 C7 2F F8 36 8F D7 A3 
  86 D8 47 DC 5A 73 C4 76  78 A7 68 58 F1 05 9E B4 
  F8 64 AD 49 B6 56 A2 35  B1 31 5B B3 D9 3B AD AD 
  21 7C D0 94 11 10 D7 C7 
11:42:36.428 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  89 89 F0 C4 D9 53 1E BA  EB 55 29 12 37 26 1E F7 
  14 A1 94 04 
11:42:36.429 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  37 39 68 10 50 16 E6 4A  AA 4B 97 D7 27 EB B3 93 
  F7 81 29 21 
11:42:36.430 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  87 00 0B 59 67 FF 1A D1  E9 54 19 14 A2 1C 01 9E 
  56 C7 2F F8 36 8F D7 A3  86 D8 47 DC 5A 73 C4 76 
11:42:36.431 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  78 A7 68 58 F1 05 9E B4  F8 64 AD 49 B6 56 A2 35 
  B1 31 5B B3 D9 3B AD AD  21 7C D0 94 11 10 D7 C7 
11:42:36.474 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: AF 82 60 27 2F 5B 2A 2E 7B F0 C6 5C 
11:42:36.475 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 10 14 00 00 
  0C AF 82 60 27 2F 5B 2A  2E 7B F0 C6 5C 
11:42:36.476 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  D7 0E 5F 66 DC 54 BE B3  8C E6 E4 0E AD B1 72 64 
  8F 1C BD 35 
11:42:36.479 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C AF 82 60 27  2F 5B 2A 2E 7B F0 C6 5C 
  D7 0E 5F 66 DC 54 BE B3  8C E6 E4 0E AD B1 72 64 
  8F 1C BD 35 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:36.482 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  1C 40 50 3B AB 9B 30 A8  D7 9D E5 BD 63 6B DC 72 
  D0 C6 37 01 64 71 2E 87  F9 F9 6C 9F 7B 39 BB 53 
  A7 F8 FA 13 DF 8D 01 FB  96 F2 6B AB 2E 42 FB 03 
  C9 44 03 31 7C 43 39 5E  5D 86 0D 56 EA 41 B2 D2 
11:42:36.482 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.485 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 40 1C 40 50  3B AB 9B 30 A8 D7 9D E5 
  BD 63 6B DC 72 D0 C6 37  01 64 71 2E 87 F9 F9 6C 
  9F 7B 39 BB 53 A7 F8 FA  13 DF 8D 01 FB 96 F2 6B 
  AB 2E 42 FB 03 C9 44 03  31 7C 43 39 5E 5D 86 0D 
  56 EA 41 B2 D2 
11:42:36.524 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 75 new bytes from server
11:42:36.526 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after decryption:  
  14 00 00 0C 1B 0A 21 A7  90 32 C6 5C 78 EC C8 76 
  6E 4E 37 F9 27 46 01 73  0A F9 09 88 84 E4 FB FB 
  ED 52 0A E0 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:36.528 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Unpadded data:  
  14 00 00 0C 1B 0A 21 A7  90 32 C6 5C 78 EC C8 76 
  6E 4E 37 F9 27 46 01 73  0A F9 09 88 84 E4 FB FB 
  ED 52 0A E0 
11:42:36.528 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 2 record(s). 
11:42:36.528 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:36.528 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:36.528 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.528 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: FINISHED
11:42:36.528 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 1B 0A 21 A7 90 32 C6 5C 78 EC C8 76 
11:42:36.529 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:36.529 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Application Data:
11:42:36.529 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 01  17 03 03 00 04 74 65 73 
  74 
11:42:36.530 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  77 83 62 0F E2 18 34 C5  65 DB C0 4D 12 4E 57 D6 
  46 E7 C9 A2 
11:42:36.531 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  74 65 73 74 77 83 62 0F  E2 18 34 C5 65 DB C0 4D 
  12 4E 57 D6 46 E7 C9 A2  07 07 07 07 07 07 07 07 
11:42:36.533 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  1C 40 50 3B AB 9B 30 A8  D7 9D E5 BD 63 6B DC 72 
  48 B8 31 CB 16 94 30 95  86 1C A4 4E FF 14 BC F4 
  E7 61 0A 15 F0 AA 50 2D  7C 72 93 1C 9A 03 DA A3 
11:42:36.533 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.535 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  17 03 03 00 30 1C 40 50  3B AB 9B 30 A8 D7 9D E5 
  BD 63 6B DC 72 48 B8 31  CB 16 94 30 95 86 1C A4 
  4E FF 14 BC F4 E7 61 0A  15 F0 AA 50 2D 7C 72 93 
  1C 9A 03 DA A3 
11:42:36.536 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.536 [Thread-5] DEBUG  - new Thread started
11:42:36.542 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ServerNameIndicationExtensionMessage.serverNameLength
11:42:36.542 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field serverNameLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ServerNameIndicationExtensionMessage 
11:42:36.543 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ServerNameIndicationExtensionMessage.serverNameListLength
11:42:36.543 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field serverNameListLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ServerNameIndicationExtensionMessage 
11:42:36.543 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.545 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.ServerNameIndicationExtensionHandler.initializeClientHelloExtension(ServerNameIndicationExtensionHandler.java:63)
  New value: 24152
11:42:36.545 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.ServerNameIndicationExtensionHandler.initializeClientHelloExtension(ServerNameIndicationExtensionHandler.java:64)
  New value: 48297
11:42:36.546 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.ServerNameIndicationExtensionHandler.initializeClientHelloExtension(ServerNameIndicationExtensionHandler.java:66)
  New value: 43858
11:42:36.546 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.ServerNameIndicationExtensionHandler.initializeClientHelloExtension(ServerNameIndicationExtensionHandler.java:70)
  New value: 43858
11:42:36.546 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.ServerNameIndicationExtensionHandler.initializeClientHelloExtension(ServerNameIndicationExtensionHandler.java:72)
  New value: 48297
11:42:36.548 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  6B 1B 73 35 15 A8 88 4C  71 E6 B6 D2 7D F8 34 A8 
  F8 28 AC 8B 71 9E 0F F3  A0 60 63 D5 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 43860
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:36.548 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.552 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0C 6B 
  1B 73 35 15 A8 88 4C 71  E6 B6 D2 7D F8 34 A8 F8 
  28 AC 8B 71 9E 0F F3 A0  60 63 D5 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 AB 54 AB 52  00 BC A9 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:36.563 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:36.564 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:36.564 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.564 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:36.564 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:36.566 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:36.566 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:36.558 [Thread-5] DEBUG  - Not enough data to fill declared vector size
javax.net.ssl.SSLException: Not enough data to fill declared vector size
	at sun.security.ssl.HandshakeInStream.verifyLength(HandshakeInStream.java:221) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeInStream.getBytes16(HandshakeInStream.java:202) ~[?:1.7.0_79]
	at sun.security.ssl.ServerNameExtension$ServerName.<init>(HelloExtensions.java:387) ~[?:1.7.0_79]
	at sun.security.ssl.ServerNameExtension.<init>(HelloExtensions.java:355) ~[?:1.7.0_79]
	at sun.security.ssl.HelloExtensions.<init>(HelloExtensions.java:81) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:245) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:36.569 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.569 [Thread-6] DEBUG  - new Thread started
11:42:36.568 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:36.569 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: EllipticCurvesExtensionMessage 
11:42:36.571 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage.cipherSuiteLength
11:42:36.571 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field cipherSuiteLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ClientHelloMessage 
11:42:36.571 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.571 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ClientHelloHandler.prepareMessageAction(ClientHelloHandler.java:86)
  New value: -6015
11:42:36.571 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerXorModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.EllipticCurvesExtensionHandler.initializeClientHelloExtension(EllipticCurvesExtensionHandler.java:65)
  New value: 19067
11:42:36.574 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerXorModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.toString(ExtensionMessage.java:94)
  New value: 19067
11:42:36.574 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  23 DF 72 63 5B E5 3B 83  4B C4 F8 D4 39 79 61 B7 
  CB 2D BC B5 F3 4A 58 84  4F 80 7F 3B 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 19067
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:36.575 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.580 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0C 23 
  DF 72 63 5B E5 3B 83 4B  C4 F8 D4 39 79 61 B7 CB 
  2D BC B5 F3 4A 58 84 4F  80 7F 3B 00 E8 81 C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  4A 7B 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:36.589 [Thread-6] DEBUG  - Not enough data to fill declared vector size
javax.net.ssl.SSLException: Not enough data to fill declared vector size
	at sun.security.ssl.HandshakeInStream.verifyLength(HandshakeInStream.java:221) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeInStream.getBytes16(HandshakeInStream.java:202) ~[?:1.7.0_79]
	at sun.security.ssl.CipherSuiteList.<init>(CipherSuiteList.java:106) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:242) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:36.599 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:36.599 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:36.599 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.599 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:36.599 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:36.599 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:36.600 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:36.603 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:36.603 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.603 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.603 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:36.603 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.605 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  5B 85 7F 40 B2 8E DD 26  1B B7 87 86 F6 D6 2A 87 
  4E 09 F0 50 0D 1F D8 0E  F0 10 F1 DA 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:36.606 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 3 record(s).
11:42:36.611 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 12 01 00 00  82 03 03 55 3A 10 0C 5B 
  85 7F 40 B2 8E DD 26 16  03 03 00 12 1B B7 87 86 
  F6 D6 2A 87 4E 09 F0 50  0D 1F D8 0E F0 10 16 03 
  03 00 62 F1 DA 00 00 0C  C0 0F C0 05 C0 04 C0 03 
  C0 0D C0 0E 01 00 00 4D  00 0A 00 0A 00 08 00 13 
  00 17 00 18 00 19 00 0B  00 02 01 00 00 00 00 0C 
  00 0A 00 00 07 74 65 73  74 2E 64 65 00 01 00 01 
  04 00 0D 00 20 00 1E 06  01 06 02 06 03 05 01 05 
  02 05 03 04 01 04 02 04  03 03 01 03 02 03 03 02 
  01 02 02 02 03 
11:42:36.611 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.616 [Thread-7] DEBUG  - new Thread started
11:42:36.632 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:36.632 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.632 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.632 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:36.634 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Server Random: 
  1D 4E 17 1C AC 98 C3 12  02 75 74 29 BA EA E7 23 
  41 67 FF 4F 86 12 7B 0C  5D F6 16 52 
  Session ID: 
  55 3A 10 0C 2F 19 23 5D  8C 75 B3 22 DB BD 14 93 
  88 68 FD A7 9D 13 73 24  76 73 7C 1E 57 F9 41 83 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:36.634 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.634 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:36.637 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:36.637 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.637 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:36.637 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:36.638 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:36.638 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:36.638 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:36.638 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:36.638 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:36.639 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:36.639 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:36.643 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:36.643 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 68262231914536607924942332816556128470519343869386482889325129653107586936478
11:42:36.643 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 55312373893540461510877263601230318352158042457415385510144706729594169070156
11:42:36.651 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  A8 D5 D2 BC EF CF 88 F7  84 2D E1 6A 5A 8A BB 6E 
  02 4C F7 13 94 8F 0E 67  01 82 46 3E 4C 00 99 03 
11:42:36.653 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0C 5B 85 7F 40  B2 8E DD 26 1B B7 87 86 
  F6 D6 2A 87 4E 09 F0 50  0D 1F D8 0E F0 10 F1 DA 
  55 3A 10 0C 1D 4E 17 1C  AC 98 C3 12 02 75 74 29 
  BA EA E7 23 41 67 FF 4F  86 12 7B 0C 5D F6 16 52 
11:42:36.654 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  9B ED E5 0C 75 39 3C E5  6E D0 3D BF 34 73 80 DE 
  2A 7E 74 98 DF 9A CA 4E  10 05 5B BD 34 DD DC ED 
  47 51 4C 60 40 F3 5F FE  AC CE F1 D4 34 4D 37 14 
11:42:36.654 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:36.655 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 2 record(s).
11:42:36.657 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 2A 10 00 00  42 41 04 96 EB 0D D8 C5 
  3F BC 71 13 67 B0 35 66  BE B6 13 24 15 8E 98 57 
  93 3D 71 E9 3E 97 46 4B  52 AE 9E 7A 49 B1 B6 16 
  03 03 00 1C 8C E8 BD 91  6C FE DE FC D5 47 DE 22 
  25 C2 6C 53 FF 81 9E 5E  DB 6E 92 DD 70 B4 12 4C 
11:42:36.658 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:36.658 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:36.658 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.658 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:36.658 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:36.659 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: ED AE 96 07 63 A4 4C C7 CF E4 76 52 
11:42:36.663 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  AD 6E 38 33 B4 D1 B7 3E  15 6B C6 A7 89 43 CC 7B 
  E6 E5 E9 FD D4 9A 89 2C  44 D2 42 07 EC 0E C3 B7 
  A4 E3 A5 54 BC 31 D2 9E  59 E9 3F AA 36 7F DF 5E 
  50 2A 5F 39 B5 53 39 87  B0 C1 96 71 2C AD DE B8 
  1E 6D 4A 48 3A 1E BA 8E  57 9C 12 21 ED F2 8B 87 
  EA F8 5B 3C E2 F2 FE DB  AF 5C E1 D8 DE 31 1B B0 
  33 E8 6A D4 23 69 7F 58 
11:42:36.664 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  AD 6E 38 33 B4 D1 B7 3E  15 6B C6 A7 89 43 CC 7B 
  E6 E5 E9 FD 
11:42:36.665 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  D4 9A 89 2C 44 D2 42 07  EC 0E C3 B7 A4 E3 A5 54 
  BC 31 D2 9E 
11:42:36.666 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  59 E9 3F AA 36 7F DF 5E  50 2A 5F 39 B5 53 39 87 
  B0 C1 96 71 2C AD DE B8  1E 6D 4A 48 3A 1E BA 8E 
11:42:36.668 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  57 9C 12 21 ED F2 8B 87  EA F8 5B 3C E2 F2 FE DB 
  AF 5C E1 D8 DE 31 1B B0  33 E8 6A D4 23 69 7F 58 
11:42:36.668 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: ED AE 96 07 63 A4 4C C7 CF E4 76 52 
11:42:36.669 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 10 14 00 00 
  0C ED AE 96 07 63 A4 4C  C7 CF E4 76 52 
11:42:36.670 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  9D 1C 35 F8 7F 41 77 BF  2B DD CD 02 62 0E A8 4C 
  92 76 86 F5 
11:42:36.672 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C ED AE 96 07  63 A4 4C C7 CF E4 76 52 
  9D 1C 35 F8 7F 41 77 BF  2B DD CD 02 62 0E A8 4C 
  92 76 86 F5 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:36.674 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  73 11 A4 BC A7 D8 07 97  88 E6 DD 2A 97 FD 41 6D 
  2D 79 81 5E 8E 39 E3 82  A0 F7 4A E3 07 5B 4F 71 
  BE 1A D8 A1 60 00 C4 9B  2A 39 75 E9 22 C2 DC 41 
  A9 59 88 76 BC 4A 08 6B  B3 2C F5 E2 03 9A 46 3B 
11:42:36.675 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.677 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 40 73 11 A4  BC A7 D8 07 97 88 E6 DD 
  2A 97 FD 41 6D 2D 79 81  5E 8E 39 E3 82 A0 F7 4A 
  E3 07 5B 4F 71 BE 1A D8  A1 60 00 C4 9B 2A 39 75 
  E9 22 C2 DC 41 A9 59 88  76 BC 4A 08 6B B3 2C F5 
  E2 03 9A 46 3B 
11:42:36.703 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 75 new bytes from server
11:42:36.704 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after decryption:  
  14 00 00 0C 4F 58 40 4F  AD F8 C0 93 2D DC 7C 01 
  31 34 12 84 05 4F A4 FB  86 8E F9 75 EE E1 C1 A9 
  AA 5A 39 F1 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:36.705 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Unpadded data:  
  14 00 00 0C 4F 58 40 4F  AD F8 C0 93 2D DC 7C 01 
  31 34 12 84 05 4F A4 FB  86 8E F9 75 EE E1 C1 A9 
  AA 5A 39 F1 
11:42:36.705 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 2 record(s). 
11:42:36.705 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:36.705 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:36.705 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.705 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: FINISHED
11:42:36.705 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 4F 58 40 4F AD F8 C0 93 2D DC 7C 01 
11:42:36.706 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:36.706 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Application Data:
11:42:36.706 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  00 00 00 00 00 00 00 01 17 03 03 00 02 74 65 
11:42:36.706 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  11 92 AC 4B 4E E0 80 5B  DF 69 19 72 26 16 1E 75 
  00 93 86 0E 
11:42:36.707 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  74 65 11 92 AC 4B 4E E0  80 5B DF 69 19 72 26 16 
  1E 75 00 93 86 0E 09 09  09 09 09 09 09 09 09 09 
11:42:36.708 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  73 11 A4 BC A7 D8 07 97  88 E6 DD 2A 97 FD 41 6D 
  11 6E 5F 0C 25 15 28 AA  70 EA CF 45 5C 0C 86 14 
  A3 4F D9 6A 70 BF 3F 1A  66 77 10 82 27 7D FD C2 
11:42:36.709 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  00 00 00 00 00 00 00 02 17 03 03 00 02 73 74 
11:42:36.709 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  83 0A FD 31 D4 01 E6 65  FF 7A E7 59 D2 5B 77 9B 
  22 DA A7 69 
11:42:36.710 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  73 74 83 0A FD 31 D4 01  E6 65 FF 7A E7 59 D2 5B 
  77 9B 22 DA A7 69 09 09  09 09 09 09 09 09 09 09 
11:42:36.711 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  73 11 A4 BC A7 D8 07 97  88 E6 DD 2A 97 FD 41 6D 
  B6 A2 AB 21 1D FF 0F 4E  11 73 98 54 0F 31 E3 E1 
  76 3F 28 FB FA 2C 28 88  23 5F 4B DC AF 97 DB 31 
11:42:36.711 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 2 record(s).
11:42:36.713 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  17 03 03 00 30 73 11 A4  BC A7 D8 07 97 88 E6 DD 
  2A 97 FD 41 6D 11 6E 5F  0C 25 15 28 AA 70 EA CF 
  45 5C 0C 86 14 A3 4F D9  6A 70 BF 3F 1A 66 77 10 
  82 27 7D FD C2 17 03 03  00 30 73 11 A4 BC A7 D8 
  07 97 88 E6 DD 2A 97 FD  41 6D B6 A2 AB 21 1D FF 
  0F 4E 11 73 98 54 0F 31  E3 E1 76 3F 28 FB FA 2C 
  28 88 23 5F 4B DC AF 97  DB 31 
11:42:36.714 [Thread-7] DEBUG  - test
11:42:36.715 [Thread-8] DEBUG  - new Thread started
11:42:36.715 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.715 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.717 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  DD C8 7B 06 4D F3 78 98  BF 8B EA 9A 9F F9 D3 9B 
  22 BB EF C8 85 48 0A 85  7A EA C0 6B 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:36.718 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.722 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0C DD 
  C8 7B 06 4D F3 78 98 BF  8B EA 9A 9F F9 D3 9B 22 
  BB EF C8 85 48 0A 85 7A  EA C0 6B 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:36.737 [Thread-4] DEBUG  - test
11:42:36.747 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:36.747 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.747 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.747 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:36.748 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Server Random: 
  21 39 BD 73 CC 6B E4 B8  2A 51 14 76 12 41 25 B7 
  4D DF CD 47 B7 04 CC 56  47 4C 49 0E 
  Session ID: 
  55 3A 10 0C 54 CC 7A 44  ED BE 01 9B 7F 09 C8 05 
  F7 FC 11 1E 2F FE 5A 6E  53 AA 92 C8 87 99 A1 4B 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:36.748 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.748 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:36.751 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:36.751 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.751 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:36.752 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:36.752 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:36.752 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:36.752 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:36.752 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:36.752 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:36.752 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:36.752 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:36.755 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:36.755 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 55035933315643242886013704234316077938038388908044323614737633694171815844362
11:42:36.755 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 9424568888824416245654424628482232521684935864363242387231330071660399066604
11:42:36.762 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  8E 11 FE 88 13 4E 0D 07  CA 1F 29 7D E1 7C 27 70 
  C8 2E E8 4E E1 E0 AE E5  98 FE 03 A8 89 DB F2 F6 
11:42:36.764 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0C DD C8 7B 06  4D F3 78 98 BF 8B EA 9A 
  9F F9 D3 9B 22 BB EF C8  85 48 0A 85 7A EA C0 6B 
  55 3A 10 0C 21 39 BD 73  CC 6B E4 B8 2A 51 14 76 
  12 41 25 B7 4D DF CD 47  B7 04 CC 56 47 4C 49 0E 
11:42:36.766 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  73 7D 63 34 40 3C 31 B4  B4 EF B8 DC EE AF 1C 63 
  42 B1 6F 68 F3 88 05 6F  E0 2F 37 E1 F9 BB AF E0 
  4A E7 56 9C 57 8A F1 58  2B 77 6A 94 A7 26 B8 A5 
11:42:36.766 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:36.766 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.768 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 46 10 00 00  42 41 04 79 AD 3B FF A1 
  CF 22 1C F5 55 13 92 63  AF 3F 68 E6 35 2E 67 77 
  B3 E1 B0 5E 76 2A F3 C4  F5 9A 0A 14 D6 1D F0 E6 
  69 92 9E F5 7D 09 DA D1  D5 BE 17 05 47 96 66 19 
  E8 BE 79 62 5B 25 05 E5  9E 7D EC 
11:42:36.768 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:36.768 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:36.769 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.769 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:36.769 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:36.770 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: 0A 2B 99 20 D9 59 07 E4 92 39 98 92 
11:42:36.773 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  DC 66 97 5D 22 53 E7 14  CD 35 0A 5E 81 8F E1 EA 
  91 48 82 51 48 E4 C1 B0  BD 05 71 6A BA 1A 9D 3E 
  85 32 00 11 90 DC E6 5C  F6 80 70 A8 55 BD 29 63 
  92 B4 4B 09 78 78 1D D1  3A 4D C0 7C BC 4D AF BB 
  81 78 8B FD 8A 1A 32 A3  BA F2 13 73 A3 70 95 C5 
  9F EA C6 6F 9F E4 53 E5  60 F7 6B 43 2F 5C A3 46 
  DD 6A 86 DD 96 49 D7 4A 
11:42:36.774 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  DC 66 97 5D 22 53 E7 14  CD 35 0A 5E 81 8F E1 EA 
  91 48 82 51 
11:42:36.775 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  48 E4 C1 B0 BD 05 71 6A  BA 1A 9D 3E 85 32 00 11 
  90 DC E6 5C 
11:42:36.775 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  F6 80 70 A8 55 BD 29 63  92 B4 4B 09 78 78 1D D1 
  3A 4D C0 7C BC 4D AF BB  81 78 8B FD 8A 1A 32 A3 
11:42:36.776 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  BA F2 13 73 A3 70 95 C5  9F EA C6 6F 9F E4 53 E5 
  60 F7 6B 43 2F 5C A3 46  DD 6A 86 DD 96 49 D7 4A 
11:42:36.776 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 0A 2B 99 20 D9 59 07 E4 92 39 98 92 
11:42:36.777 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 10 14 00 00 
  0C 0A 2B 99 20 D9 59 07  E4 92 39 98 92 
11:42:36.777 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  A7 88 A0 28 DB 8B FE BB  F8 A1 DD 09 D5 3C B6 C6 
  CF 11 50 49 
11:42:36.778 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C 0A 2B 99 20  D9 59 07 E4 92 39 98 92 
  A7 88 A0 28 DB 8B FE BB  F8 A1 DD 09 D5 3C B6 C6 
  CF 11 50 49 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:36.779 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  3D 66 E9 EE 6F 0D 46 42  2A 01 51 11 8D 12 8C 60 
  B5 C5 A1 54 A9 70 A1 B0  57 3C 4F 16 DE CF F2 F2 
  1D 7D EC 46 99 BE B7 74  D2 A1 90 48 BC 7D 9A BF 
  17 50 75 DE CB 50 1C 4A  CC 34 1F 6E AB 22 B6 7C 
11:42:36.779 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.781 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 40 3D 66 E9  EE 6F 0D 46 42 2A 01 51 
  11 8D 12 8C 60 B5 C5 A1  54 A9 70 A1 B0 57 3C 4F 
  16 DE CF F2 F2 1D 7D EC  46 99 BE B7 74 D2 A1 90 
  48 BC 7D 9A BF 17 50 75  DE CB 50 1C 4A CC 34 1F 
  6E AB 22 B6 7C 
11:42:36.794 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 75 new bytes from server
11:42:36.795 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after decryption:  
  14 00 00 0C 5D 1C 7E 3B  6F A9 A3 4C DB 8D 52 33 
  A7 E2 26 71 A0 15 5D 74  F1 11 AA DF FC 40 D9 82 
  DF B8 10 B7 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:36.797 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Unpadded data:  
  14 00 00 0C 5D 1C 7E 3B  6F A9 A3 4C DB 8D 52 33 
  A7 E2 26 71 A0 15 5D 74  F1 11 AA DF FC 40 D9 82 
  DF B8 10 B7 
11:42:36.798 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 2 record(s). 
11:42:36.798 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:36.798 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:36.798 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.798 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: FINISHED
11:42:36.798 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 5D 1C 7E 3B 6F A9 A3 4C DB 8D 52 33 
11:42:36.799 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:36.799 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Application Data:
11:42:36.799 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 01  17 03 03 00 04 74 65 73 
  74 
11:42:36.800 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  55 E6 0E EE A8 8D 17 78  74 0B F9 23 C3 F5 71 18 
  92 B0 3D 0E 
11:42:36.801 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  74 65 73 74 55 E6 0E EE  A8 8D 17 78 74 0B F9 23 
  C3 F5 71 18 92 B0 3D 0E  07 07 07 07 07 07 07 07 
11:42:36.802 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  3D 66 E9 EE 6F 0D 46 42  2A 01 51 11 8D 12 8C 60 
  4A A9 CB 95 AF 71 80 95  69 33 14 AC 48 A8 3E 6A 
  C5 F4 24 92 0E 1B 79 1F  31 DF C1 41 F7 DF 50 48 
11:42:36.802 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.803 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  17 03 03 00 30 3D 66 E9  EE 6F 0D 46 42 2A 01 51 
  11 8D 12 8C 60 4A A9 CB  95 AF 71 80 95 69 33 14 
  AC 48 A8 3E 6A C5 F4 24  92 0E 1B 79 1F 31 DF C1 
  41 F7 DF 50 48 
11:42:36.804 [Thread-8] DEBUG  - test
11:42:36.816 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Duplicating class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage 
  and inserting it at position 4
11:42:36.816 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.biginteger.ModifiableBigInteger de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage.publicKeyBaseY
11:42:36.817 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field publicKeyBaseY of type class de.rub.nds.tlsattacker.modifiablevariable.biginteger.ModifiableBigInteger from the following class: ECDHClientKeyExchangeMessage 
11:42:36.805 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.805 [Thread-9] DEBUG  - new Thread started
11:42:36.819 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:36.819 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: SignatureAndHashAlgorithmsExtensionMessage 
11:42:36.819 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.820 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.SignatureAndHashAlgorithmsExtensionHandler.initializeClientHelloExtension(SignatureAndHashAlgorithmsExtensionHandler.java:66)
  New value: -6075
11:42:36.821 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.toString(ExtensionMessage.java:94)
  New value: -6075
11:42:36.821 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  30 60 32 84 0C 68 E1 2F  7F B7 AD 37 C8 62 58 CD 
  1B CF 1E 16 33 66 08 B2  01 AB B7 C6 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: -6075
11:42:36.821 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.822 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0C 30 
  60 32 84 0C 68 E1 2F 7F  B7 AD 37 C8 62 58 CD 1B 
  CF 1E 16 33 66 08 B2 01  AB B7 C6 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D E8 45 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:36.823 [Thread-9] DEBUG  - Invalid signature_algorithms extension
javax.net.ssl.SSLProtocolException: Invalid signature_algorithms extension
	at sun.security.ssl.SignatureAlgorithmsExtension.<init>(HelloExtensions.java:791) ~[?:1.7.0_79]
	at sun.security.ssl.HelloExtensions.<init>(HelloExtensions.java:83) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:245) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:36.833 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:36.833 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:36.833 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.833 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:36.834 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:36.834 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:36.834 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:36.834 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.834 [Thread-10] DEBUG  - new Thread started
11:42:36.835 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.SignatureAndHashAlgorithmsExtensionMessage.signatureAndHashAlgorithmsLength
11:42:36.835 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field signatureAndHashAlgorithmsLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: SignatureAndHashAlgorithmsExtensionMessage 
11:42:36.836 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.836 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerXorModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.SignatureAndHashAlgorithmsExtensionHandler.initializeClientHelloExtension(SignatureAndHashAlgorithmsExtensionHandler.java:62)
  New value: 28110
11:42:36.836 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerXorModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.SignatureAndHashAlgorithmsExtensionHandler.initializeClientHelloExtension(SignatureAndHashAlgorithmsExtensionHandler.java:67)
  New value: 28110
11:42:36.837 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  AC D0 DC 3D B2 4D 73 E1  62 7A 2B 2A 3B C7 96 EF 
  18 35 0B F4 F2 E7 EE DF  A2 C8 48 B5 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 28112
11:42:36.837 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.839 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0C AC 
  D0 DC 3D B2 4D 73 E1 62  7A 2B 2A 3B C7 96 EF 18 
  35 0B F4 F2 E7 EE DF A2  C8 48 B5 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 6D D0 6D CE 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:36.840 [Thread-10] DEBUG  - Unexpected end of handshake data
javax.net.ssl.SSLException: Unexpected end of handshake data
	at sun.security.ssl.HandshakeInStream.read(HandshakeInStream.java:87) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeInStream.getInt8(HandshakeInStream.java:171) ~[?:1.7.0_79]
	at sun.security.ssl.SignatureAlgorithmsExtension.<init>(HelloExtensions.java:798) ~[?:1.7.0_79]
	at sun.security.ssl.HelloExtensions.<init>(HelloExtensions.java:83) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:245) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:36.850 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:36.850 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:36.850 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.850 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:36.850 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:36.850 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:36.850 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:36.851 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.851 [Thread-11] DEBUG  - new Thread started
11:42:36.851 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.851 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...
11:42:36.851 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage

11:42:36.852 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  1B 46 39 18 2D 18 66 89  E9 8B F3 8C FA 09 83 F5 
  D1 46 1F 67 0B 27 FD D8  6D C0 63 3E 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:36.852 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 3 record(s).
11:42:36.855 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 01 01 16 03  03 00 2E 00 00 82 03 03 
  55 3A 10 0C 1B 46 39 18  2D 18 66 89 E9 8B F3 8C 
  FA 09 83 F5 D1 46 1F 67  0B 27 FD D8 6D C0 63 3E 
  00 00 0C C0 0F C0 05 C0  04 16 03 03 00 57 C0 03 
  C0 0D C0 0E 01 00 00 4D  00 0A 00 0A 00 08 00 13 
  00 17 00 18 00 19 00 0B  00 02 01 00 00 00 00 0C 
  00 0A 00 00 07 74 65 73  74 2E 64 65 00 01 00 01 
  04 00 0D 00 20 00 1E 06  01 06 02 06 03 05 01 05 
  02 05 03 04 01 04 02 04  03 03 01 03 02 03 03 02 
  01 02 02 02 03 
11:42:36.867 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:36.867 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.867 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.867 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:36.868 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Server Random: 
  E3 BE 6D 45 A2 F8 03 98  FC 4C D3 19 13 D2 71 61 
  B3 C6 16 4B 7D D1 05 91  E9 25 BA 5E 
  Session ID: 
  55 3A 10 0C E3 C5 F1 37  F0 24 D4 A2 BC 25 E3 2B 
  1A 11 1C A8 94 5A 41 1A  91 1F C0 41 3C B8 BE 9D 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:36.868 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.868 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:36.870 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:36.870 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.870 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:36.870 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:36.871 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:36.871 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:36.871 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:36.871 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:36.871 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:36.871 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:36.871 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:36.873 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:36.873 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 97805056717700789043736928631866177117134300427435955657612903980318634874647
11:42:36.873 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 43898682624795741441661125585116702681694910844154348347852636301983132573586
11:42:36.876 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  8B 54 83 30 D4 B0 C8 86  E7 00 42 17 1E BE 2F AC 
  3F E0 00 44 F1 BB 73 09  3B 5B A4 FD 98 FD D5 D4 
11:42:36.877 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0C 1B 46 39 18  2D 18 66 89 E9 8B F3 8C 
  FA 09 83 F5 D1 46 1F 67  0B 27 FD D8 6D C0 63 3E 
  55 3A 10 0C E3 BE 6D 45  A2 F8 03 98 FC 4C D3 19 
  13 D2 71 61 B3 C6 16 4B  7D D1 05 91 E9 25 BA 5E 
11:42:36.878 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  7B 4C 55 82 FA D0 AE E5  F3 8D 6A AF 08 AE 39 4F 
  24 98 06 A2 4F 4D DF E7  A3 F2 D6 D7 64 84 38 8D 
  15 F2 6D 92 ED 19 E5 C3  3B 49 48 68 36 1A 3D 98 
11:42:36.878 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:36.878 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.879 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 46 10 00 00  42 41 04 D8 3B B3 4B 74 
  CE AE 01 1B FB 06 64 6D  59 3D 0C 59 ED 96 88 11 
  7D A6 A5 47 9B E9 E2 86  DD 17 17 61 0D C6 1B FD 
  5B 46 73 04 9C B5 03 00  FD CE 1E 7E CE F6 48 E5 
  99 57 04 B0 45 EF C7 92  2E 5F 92 
11:42:36.879 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:36.879 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:36.879 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.879 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:36.879 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:36.879 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: E2 95 13 E8 F0 64 04 5D DC 43 15 EC 
11:42:36.881 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  70 1E BA BC 4B 30 B8 70  DA 7C 00 BC 2F 3E 75 9E 
  67 EA EC 81 B7 05 75 C9  E4 E2 27 54 EF 8F F3 B4 
  E0 E7 FD 91 5E FF F2 CC  90 B0 09 F7 EB 6E C6 DC 
  8F 08 8C F4 E9 36 C9 1E  39 90 C6 DB 3E 6A 20 F0 
  E9 55 30 A6 36 80 5E 2D  05 4B C6 23 26 C3 88 54 
  22 7E EB D5 78 FE A0 0F  BD B6 2C D9 AE 2B 26 A3 
  F7 74 4D 77 CD FD 64 5D 
11:42:36.881 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  70 1E BA BC 4B 30 B8 70  DA 7C 00 BC 2F 3E 75 9E 
  67 EA EC 81 
11:42:36.881 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  B7 05 75 C9 E4 E2 27 54  EF 8F F3 B4 E0 E7 FD 91 
  5E FF F2 CC 
11:42:36.882 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  90 B0 09 F7 EB 6E C6 DC  8F 08 8C F4 E9 36 C9 1E 
  39 90 C6 DB 3E 6A 20 F0  E9 55 30 A6 36 80 5E 2D 
11:42:36.882 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  05 4B C6 23 26 C3 88 54  22 7E EB D5 78 FE A0 0F 
  BD B6 2C D9 AE 2B 26 A3  F7 74 4D 77 CD FD 64 5D 
11:42:36.882 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: E2 95 13 E8 F0 64 04 5D DC 43 15 EC 
11:42:36.883 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 10 14 00 00 
  0C E2 95 13 E8 F0 64 04  5D DC 43 15 EC 
11:42:36.883 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  6C 5B 06 D9 9F 77 F1 C3  11 72 6E 4D 6F FE 88 FF 
  17 3E 0B 5A 
11:42:36.883 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C E2 95 13 E8  F0 64 04 5D DC 43 15 EC 
  6C 5B 06 D9 9F 77 F1 C3  11 72 6E 4D 6F FE 88 FF 
  17 3E 0B 5A 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:36.884 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  C0 BC 48 37 7D CC B0 A4  F1 43 14 32 64 04 94 DA 
  13 1B C9 95 33 F5 4E 66  CA 0B B7 42 3D F6 06 35 
  BB 8A 09 1E 08 FB 6F C8  60 4E 74 3F F3 3A 45 9D 
  F5 D8 71 F7 F1 DF D2 4E  86 B8 17 89 9C 14 00 96 
11:42:36.884 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.885 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 40 C0 BC 48  37 7D CC B0 A4 F1 43 14 
  32 64 04 94 DA 13 1B C9  95 33 F5 4E 66 CA 0B B7 
  42 3D F6 06 35 BB 8A 09  1E 08 FB 6F C8 60 4E 74 
  3F F3 3A 45 9D F5 D8 71  F7 F1 DF D2 4E 86 B8 17 
  89 9C 14 00 96 
11:42:36.899 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 6 new bytes from server
11:42:36.900 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 14 03 03 00 01 01 
11:42:36.900 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.900 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:36.900 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:36.938 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 69 new bytes from server
11:42:36.938 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after decryption:  
  14 00 00 0C 23 E1 C8 32  16 E9 22 20 CB 57 53 71 
  97 CF 43 BE 71 52 FE 22  5C F4 56 ED 6C 3B 87 E8 
  B3 D7 48 08 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:36.939 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Unpadded data:  
  14 00 00 0C 23 E1 C8 32  16 E9 22 20 CB 57 53 71 
  97 CF 43 BE 71 52 FE 22  5C F4 56 ED 6C 3B 87 E8 
  B3 D7 48 08 
11:42:36.939 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.939 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.939 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: FINISHED
11:42:36.939 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 23 E1 C8 32 16 E9 22 20 CB 57 53 71 
11:42:36.939 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:36.939 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Application Data:
11:42:36.939 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 01  17 03 03 00 04 74 65 73 
  74 
11:42:36.940 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  D7 5C 16 BF 1E CF AC FF  1D 53 AB 20 D5 CD 43 25 
  77 4A 53 A7 
11:42:36.940 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  74 65 73 74 D7 5C 16 BF  1E CF AC FF 1D 53 AB 20 
  D5 CD 43 25 77 4A 53 A7  07 07 07 07 07 07 07 07 
11:42:36.940 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  C0 BC 48 37 7D CC B0 A4  F1 43 14 32 64 04 94 DA 
  DA 43 3D E1 EA FE F8 22  F6 17 F9 C8 68 2E D5 94 
  CB 34 F5 3D 17 E0 F0 30  49 B7 DD 0A 28 68 47 23 
11:42:36.940 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.940 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  17 03 03 00 30 C0 BC 48  37 7D CC B0 A4 F1 43 14 
  32 64 04 94 DA DA 43 3D  E1 EA FE F8 22 F6 17 F9 
  C8 68 2E D5 94 CB 34 F5  3D 17 E0 F0 30 49 B7 DD 
  0A 28 68 47 23 
11:42:36.941 [Thread-11] DEBUG  - test
11:42:36.942 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.EllipticCurvesExtensionMessage.supportedCurvesLength
11:42:36.942 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field supportedCurvesLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: EllipticCurvesExtensionMessage 
11:42:36.943 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:36.943 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ServerNameIndicationExtensionMessage 
11:42:36.943 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.943 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.EllipticCurvesExtensionHandler.initializeClientHelloExtension(EllipticCurvesExtensionHandler.java:62)
  New value: -2857
11:42:36.943 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.EllipticCurvesExtensionHandler.initializeClientHelloExtension(EllipticCurvesExtensionHandler.java:66)
  New value: -2857
11:42:36.943 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerXorModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.ServerNameIndicationExtensionHandler.initializeClientHelloExtension(ServerNameIndicationExtensionHandler.java:69)
  New value: 3476
11:42:36.944 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerXorModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.toString(ExtensionMessage.java:94)
  New value: 3476
11:42:36.944 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  EF 0F E1 6F DB 22 32 0E  0C D3 2D 61 27 0A 97 48 
  43 69 AE FC FF CE 66 40  38 57 57 6D 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: -2855
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 3476
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:36.944 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.944 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.944 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0C EF 
  0F E1 6F DB 22 32 0E 0C  D3 2D 61 27 0A 97 48 43 
  69 AE FC FF CE 66 40 38  57 57 6D 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  F4 D9 F4 D7 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 0D 94 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:36.947 [Thread-12] DEBUG  - new Thread started
11:42:36.949 [Thread-12] DEBUG  - Invalid elliptic_curves extension
javax.net.ssl.SSLProtocolException: Invalid elliptic_curves extension
	at sun.security.ssl.SupportedEllipticCurvesExtension.<init>(HelloExtensions.java:458) ~[?:1.7.0_79]
	at sun.security.ssl.HelloExtensions.<init>(HelloExtensions.java:85) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:245) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:36.960 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:36.960 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:36.960 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.960 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:36.960 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:36.960 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:36.960 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:36.961 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:36.961 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:36.961 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:36.962 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.record.messages.Record.paddingLength
11:42:36.962 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field paddingLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: Record 
11:42:36.963 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage.compressionLength
11:42:36.963 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field compressionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ClientHelloMessage 
11:42:36.964 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.961 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.964 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ClientHelloHandler.prepareMessageAction(ClientHelloHandler.java:88)
  New value: 20365
11:42:36.964 [Thread-13] DEBUG  - new Thread started
11:42:36.964 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  47 88 3A 57 07 7D 86 3D  40 BF 5F BA 47 25 49 4F 
  CC 9B A5 E4 3F 59 0F E8  63 DC 47 F9 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:36.964 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.965 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0C 47 
  88 3A 57 07 7D 86 3D 40  BF 5F BA 47 25 49 4F CC 
  9B A5 E4 3F 59 0F E8 63  DC 47 F9 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 8D 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:36.967 [Thread-13] DEBUG  - Not enough data to fill declared vector size
javax.net.ssl.SSLException: Not enough data to fill declared vector size
	at sun.security.ssl.HandshakeInStream.verifyLength(HandshakeInStream.java:221) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeInStream.getBytes8(HandshakeInStream.java:193) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:243) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:36.977 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:36.977 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:36.977 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.977 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:36.977 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:36.977 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:36.977 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:36.978 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:36.978 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:36.978 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:36.978 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:36.978 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Client Random: 
  17 51 E5 82 90 0F C9 DD  27 E7 43 78 2D E1 97 DF 
  85 32 29 92 E0 E0 F5 C8  2A 23 8B AE 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:36.978 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:36.979 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0C 17 
  51 E5 82 90 0F C9 DD 27  E7 43 78 2D E1 97 DF 85 
  32 29 92 E0 E0 F5 C8 2A  23 8B AE 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:36.980 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:36.980 [Thread-14] DEBUG  - new Thread started
11:42:36.996 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:36.996 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:36.996 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.996 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:36.996 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:36 CEST 2015
  Server Random: 
  DB 54 55 03 E2 D8 2D 8A  CC 08 76 9F 0B B2 CA 8A 
  81 B0 81 CA 9C 6D D8 CB  85 FC 24 EB 
  Session ID: 
  55 3A 10 0C BF 25 F3 90  7B EC 13 49 0F 3A 29 90 
  9D 21 1C 39 A9 AD 2F A5  8C 59 34 68 63 65 7A 4A 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:36.996 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.997 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:36.999 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:36.999 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:36.999 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:36.999 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:36.999 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:36.999 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:36.999 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:36.999 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:36.999 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:37.000 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:37.000 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:37.001 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:37.001 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 107481883574495111203450107856538192379766239955647525326512344766033167699995
11:42:37.002 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 65277704592450865932047506991117030239318571897929619214170145410883788512581
11:42:37.005 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  7B A4 F5 C4 2C CD 7D 7F  2E 66 D2 E9 57 2A D2 3A 
  1A 20 FF EC 72 79 83 F3  82 BC 9B 5C 56 7D CC C0 
11:42:37.005 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0C 17 51 E5 82  90 0F C9 DD 27 E7 43 78 
  2D E1 97 DF 85 32 29 92  E0 E0 F5 C8 2A 23 8B AE 
  55 3A 10 0C DB 54 55 03  E2 D8 2D 8A CC 08 76 9F 
  0B B2 CA 8A 81 B0 81 CA  9C 6D D8 CB 85 FC 24 EB 
11:42:37.006 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  A2 E2 5B A2 16 EE 2D BD  F4 C9 7C FE 8D 11 0B 07 
  8E 09 25 BB BA 34 C7 EF  2D 45 46 D0 ED 65 3F BF 
  53 D0 2D E5 08 61 61 6C  23 3C 46 A1 7E EF 37 1E 
11:42:37.006 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:37.006 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 2 record(s).
11:42:37.006 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 11 10 00 00  42 41 04 ED A0 97 1C 6B 
  7C 55 BA 9B 0D 70 16 03  03 00 35 A0 51 39 44 BB 
  E8 40 BE A2 A2 0A D4 ED  E4 1B B1 FD F6 54 D0 1B 
  90 51 DF 19 C5 50 0F 27  60 BE 93 06 3D DD BD 3C 
  1E 81 04 8E 96 D1 6A AE  24 51 F1 35 5F D8 9D 45 
11:42:37.006 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:37.006 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.006 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.007 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:37.007 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.007 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: 31 3A 42 F6 F5 40 55 50 72 49 78 18 
11:42:37.008 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  99 91 80 54 1D 43 96 74  F8 2E AC DE BE A6 27 48 
  EC 8B 69 1E A9 C9 A6 79  31 45 74 B0 58 8B B9 76 
  BA AD F8 67 C4 8B 51 F4  E8 31 83 E4 70 3F EC EB 
  F5 9E 83 CB A7 6F 3E FB  6D 6F F5 40 82 38 14 88 
  E4 27 DE 59 D3 30 A5 20  F1 64 1F BE 2C 3A 75 6A 
  D6 B3 5A C4 1D 40 7F 87  57 77 4D 98 80 F8 CE 48 
  55 FD 0B 9E 0F FD 16 89 
11:42:37.008 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  99 91 80 54 1D 43 96 74  F8 2E AC DE BE A6 27 48 
  EC 8B 69 1E 
11:42:37.008 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  A9 C9 A6 79 31 45 74 B0  58 8B B9 76 BA AD F8 67 
  C4 8B 51 F4 
11:42:37.008 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  E8 31 83 E4 70 3F EC EB  F5 9E 83 CB A7 6F 3E FB 
  6D 6F F5 40 82 38 14 88  E4 27 DE 59 D3 30 A5 20 
11:42:37.008 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  F1 64 1F BE 2C 3A 75 6A  D6 B3 5A C4 1D 40 7F 87 
  57 77 4D 98 80 F8 CE 48  55 FD 0B 9E 0F FD 16 89 
11:42:37.009 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 31 3A 42 F6 F5 40 55 50 72 49 78 18 
11:42:37.009 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  00 00 00 00 00 00 00 00 16 03 03 00 02 14 00 
11:42:37.009 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  3F D5 28 4D FF 38 41 E3  9D 59 F9 18 FC EA ED A8 
  F6 2D 3D B8 
11:42:37.009 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 3F D5 28 4D FF 38  41 E3 9D 59 F9 18 FC EA 
  ED A8 F6 2D 3D B8 09 09  09 09 09 09 09 09 09 09 
11:42:37.010 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  1C 99 10 CB 24 CA B2 EA  0F 8F D9 22 75 14 B6 C3 
  D2 AA F1 42 61 95 43 8B  65 BF 24 2F A5 1B FB 8C 
  EB 1B C6 BF 29 27 C2 E4  F2 51 99 0B CE 68 AB 4D 
11:42:37.010 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 01  16 03 03 00 0E 00 0C 31 
  3A 42 F6 F5 40 55 50 72  49 78 18 
11:42:37.010 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  4B DD AA 1F 98 A7 93 32  85 96 2D 9D 58 7A C1 BD 
  DB C7 9D 36 
11:42:37.010 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  00 0C 31 3A 42 F6 F5 40  55 50 72 49 78 18 4B DD 
  AA 1F 98 A7 93 32 85 96  2D 9D 58 7A C1 BD DB C7 
  9D 36 0D 0D 0D 0D 0D 0D  0D 0D 0D 0D 0D 0D 0D 0D 
11:42:37.011 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  1C 99 10 CB 24 CA B2 EA  0F 8F D9 22 75 14 B6 C3 
  2B 83 64 4E F7 5D FB C6  5B 1C 19 B3 55 C2 3D A1 
  0E 46 55 8C 1D D0 D0 79  64 A9 32 4B AD 32 1C 3F 
  61 10 FF D7 BE 8A 54 03  0B DC 37 34 B3 A7 E6 25 
11:42:37.011 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 2 record(s).
11:42:37.011 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 30 1C 99 10  CB 24 CA B2 EA 0F 8F D9 
  22 75 14 B6 C3 D2 AA F1  42 61 95 43 8B 65 BF 24 
  2F A5 1B FB 8C EB 1B C6  BF 29 27 C2 E4 F2 51 99 
  0B CE 68 AB 4D 16 03 03  00 40 1C 99 10 CB 24 CA 
  B2 EA 0F 8F D9 22 75 14  B6 C3 2B 83 64 4E F7 5D 
  FB C6 5B 1C 19 B3 55 C2  3D A1 0E 46 55 8C 1D D0 
  D0 79 64 A9 32 4B AD 32  1C 3F 61 10 FF D7 BE 8A 
  54 03 0B DC 37 34 B3 A7  E6 25 
11:42:37.026 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 6 new bytes from server
11:42:37.026 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 14 03 03 00 01 01 
11:42:37.026 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.026 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:37.026 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.062 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 69 new bytes from server
11:42:37.062 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after decryption:  
  14 00 00 0C 7F A0 9D 85  0E 2C 5D DD C1 30 EB 77 
  DC 43 A6 4B F5 C8 43 84  86 8B 59 5A AD AB AC C1 
  7D B0 72 35 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:37.063 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Unpadded data:  
  14 00 00 0C 7F A0 9D 85  0E 2C 5D DD C1 30 EB 77 
  DC 43 A6 4B F5 C8 43 84  86 8B 59 5A AD AB AC C1 
  7D B0 72 35 
11:42:37.063 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.063 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.063 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: FINISHED
11:42:37.063 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 7F A0 9D 85 0E 2C 5D DD C1 30 EB 77 
11:42:37.063 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:37.063 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Application Data:
11:42:37.063 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 02  17 03 03 00 04 74 65 73 
  74 
11:42:37.064 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  61 AA 45 80 68 2F 48 A2  9B E5 BB 69 77 7B 23 26 
  75 54 87 8F 
11:42:37.064 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  74 65 73 74 61 AA 45 80  68 2F 48 A2 9B E5 BB 69 
  77 7B 23 26 75 54 87 8F  07 07 07 07 07 07 07 07 
11:42:37.064 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  1C 99 10 CB 24 CA B2 EA  0F 8F D9 22 75 14 B6 C3 
  40 CD 3F 18 4D AE 3B CB  04 4C 30 81 FF 08 0F 9D 
  AA 28 A4 87 40 56 A6 6D  8E E8 A6 9E 33 CD CE A1 
11:42:37.064 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.065 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  17 03 03 00 30 1C 99 10  CB 24 CA B2 EA 0F 8F D9 
  22 75 14 B6 C3 40 CD 3F  18 4D AE 3B CB 04 4C 30 
  81 FF 08 0F 9D AA 28 A4  87 40 56 A6 6D 8E E8 A6 
  9E 33 CD CE A1 
11:42:37.067 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...
11:42:37.068 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength

11:42:37.068 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: MaxFragmentLengthExtensionMessage 
11:42:37.068 [Thread-14] DEBUG  - test
11:42:37.068 [Thread-15] DEBUG  - new Thread started
11:42:37.069 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.handshake.messages.HandshakeMessage.length
11:42:37.069 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field length of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ClientHelloMessage 
11:42:37.074 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.handshake.messages.HelloMessage.sessionIdLength
11:42:37.075 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field sessionIdLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ClientHelloMessage 
11:42:37.075 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:37.075 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: MaxFragmentLengthExtensionMessage 
11:42:37.075 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:37.075 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: MaxFragmentLengthExtensionMessage 
11:42:37.075 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.076 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ClientHelloHandler.prepareMessageAction(ClientHelloHandler.java:85)
  New value: 28646
11:42:37.076 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.MaxFragmentLengthExtensionHandler.initializeClientHelloExtension(MaxFragmentLengthExtensionHandler.java:59)
  New value: 20688
11:42:37.076 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ClientHelloHandler.prepareMessageAction(ClientHelloHandler.java:106)
  New value: -12336
11:42:37.076 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.handshake.messages.HandshakeMessage.toString(HandshakeMessage.java:86)
  New value: -12336
11:42:37.076 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.toString(ExtensionMessage.java:94)
  New value: 20688
11:42:37.076 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: -12336
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  F5 9E 83 E8 83 AD 39 0D  ED 41 03 54 E5 D2 B3 CD 
  17 E0 0E 08 63 51 01 6F  D4 43 95 C8 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 20688
    Extension type: 00 0D 
    Extension length: 32
11:42:37.076 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.077 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 00 FF CF  D0 03 03 55 3A 10 0D F5 
  9E 83 E8 83 AD 39 0D ED  41 03 54 E5 D2 B3 CD 17 
  E0 0E 08 63 51 01 6F D4  43 95 C8 E6 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 50 D0 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:37.177 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 0 new bytes from server
11:42:37.177 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 
11:42:37.177 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 0 record(s). 
11:42:37.177 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message was not found, the server does not send any data.
11:42:37.177 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.177 [Thread-15] DEBUG  - Remote host closed connection during handshake
javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:953) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at sun.security.ssl.InputRecord.read(InputRecord.java:482) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:934) ~[?:1.7.0_79]
	... 12 more
11:42:37.179 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage.compressionLength
11:42:37.179 [Thread-16] DEBUG  - new Thread started
11:42:37.179 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field compressionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ClientHelloMessage 
11:42:37.179 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ServerNameIndicationExtensionMessage.serverNameListLength
11:42:37.179 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field serverNameListLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ServerNameIndicationExtensionMessage 
11:42:37.179 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.180 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ClientHelloHandler.prepareMessageAction(ClientHelloHandler.java:88)
  New value: 5311
11:42:37.180 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerExplicitValueModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.ServerNameIndicationExtensionHandler.initializeClientHelloExtension(ServerNameIndicationExtensionHandler.java:66)
  New value: 13252
11:42:37.394 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerExplicitValueModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.ServerNameIndicationExtensionHandler.initializeClientHelloExtension(ServerNameIndicationExtensionHandler.java:70)
  New value: 13252
11:42:37.395 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  3D 4B 0E 4B C2 97 F0 67  42 12 29 72 68 AD 94 FB 
  2B 10 F1 0B F7 BE C2 9C  18 58 16 5B 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 13254
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:37.395 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.396 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0D 3D 
  4B 0E 4B C2 97 F0 67 42  12 29 72 68 AD 94 FB 2B 
  10 F1 0B F7 BE C2 9C 18  58 16 5B 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E BF 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 33 C6 33 C4  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:37.396 [Thread-16] DEBUG  - Not enough data to fill declared vector size
javax.net.ssl.SSLException: Not enough data to fill declared vector size
	at sun.security.ssl.HandshakeInStream.verifyLength(HandshakeInStream.java:221) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeInStream.getBytes8(HandshakeInStream.java:193) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:243) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:37.406 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:37.407 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:37.407 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.407 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:37.407 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:37.407 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:37.407 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:37.408 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.409 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  D0 42 D2 96 83 2D 15 E6  CA 1D 8A 7B 76 B8 9B ED 
  A0 B8 5E D3 A9 8F 1E 36  23 BB 3B D8 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:37.409 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.410 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0D D0 
  42 D2 96 83 2D 15 E6 CA  1D 8A 7B 76 B8 9B ED A0 
  B8 5E D3 A9 8F 1E 36 23  BB 3B D8 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:37.408 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.408 [Thread-17] DEBUG  - new Thread started
11:42:37.422 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:37.422 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.422 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.422 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:37.423 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Server Random: 
  91 9E 54 60 F0 01 B6 A5  68 6A B5 24 BA 83 75 1E 
  F7 7B EC DE 77 7F AD 95  D0 5A 22 CA 
  Session ID: 
  55 3A 10 0D 7F 84 10 03  A7 96 21 E5 A9 D4 7F 44 
  0D 59 26 55 9B CA 79 A3  25 B6 8B A3 82 6C 3E 8E 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:37.423 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.423 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:37.426 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:37.426 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.426 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:37.426 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:37.426 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.426 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:37.427 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:37.427 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:37.427 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:37.427 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:37.427 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:37.429 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:37.429 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 83295480039666336887524396969228295117873367299736056789939253526823919642281
11:42:37.429 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 67623897517116945140424176433850468378607480404413084007600140390900687273233
11:42:37.433 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  2B 96 24 1C 56 D9 41 98  98 E5 DD E6 37 6A 6D 90 
  D6 55 97 10 95 CF F5 D6  48 85 1A 5D 44 0D 19 50 
11:42:37.433 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0D D0 42 D2 96  83 2D 15 E6 CA 1D 8A 7B 
  76 B8 9B ED A0 B8 5E D3  A9 8F 1E 36 23 BB 3B D8 
  55 3A 10 0D 91 9E 54 60  F0 01 B6 A5 68 6A B5 24 
  BA 83 75 1E F7 7B EC DE  77 7F AD 95 D0 5A 22 CA 
11:42:37.435 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  99 F5 0C 33 E8 FD F5 80  22 12 22 BF B5 65 0D F4 
  62 84 FD 0F B6 99 FE D7  A6 64 01 D1 0D 34 8B 57 
  D2 7C 2C 6C 12 17 33 C6  E6 56 C2 8B 81 FF 35 CC 
11:42:37.435 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:37.435 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.436 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 46 10 00 00  42 41 04 B8 27 92 2C E0 
  3C 1B 3B 32 C7 0B 88 19  DF 16 EF 19 D0 2A 80 97 
  69 94 54 F7 CF 86 30 AF  AF 66 A9 95 81 C5 06 0A 
  1A 0F B7 31 ED 85 AB 88  2D 11 1B 06 FF 10 E6 63 
  4D 71 40 1D 1B F2 D9 49  E9 7D 11 
11:42:37.436 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:37.436 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.436 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.436 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:37.436 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.436 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: 35 C4 6E 56 74 1B 10 F0 C4 64 F1 14 
11:42:37.438 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  B8 ED 96 0D 80 CC FE 8C  ED 95 4E 85 56 8D 10 6D 
  80 EE 0C 09 6A 70 B8 C5  C5 AD 51 D7 EF 93 60 01 
  99 55 66 3E AA 56 E6 C1  1F 95 B9 AF 8B 32 4D 28 
  AA 43 4F 57 50 B9 13 8D  0E F7 B5 95 9B D3 9C 7D 
  77 57 DB AC C2 FF D2 D6  1C A5 D7 DC C4 A0 51 46 
  EB 9F 91 6B 34 27 5F 1B  52 9E 97 B1 F3 45 6E 9F 
  9E B9 7E 96 44 1A 33 8F 
11:42:37.438 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  B8 ED 96 0D 80 CC FE 8C  ED 95 4E 85 56 8D 10 6D 
  80 EE 0C 09 
11:42:37.439 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  6A 70 B8 C5 C5 AD 51 D7  EF 93 60 01 99 55 66 3E 
  AA 56 E6 C1 
11:42:37.439 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  1F 95 B9 AF 8B 32 4D 28  AA 43 4F 57 50 B9 13 8D 
  0E F7 B5 95 9B D3 9C 7D  77 57 DB AC C2 FF D2 D6 
11:42:37.439 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  1C A5 D7 DC C4 A0 51 46  EB 9F 91 6B 34 27 5F 1B 
  52 9E 97 B1 F3 45 6E 9F  9E B9 7E 96 44 1A 33 8F 
11:42:37.440 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 35 C4 6E 56 74 1B 10 F0 C4 64 F1 14 
11:42:37.440 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 10 14 00 00 
  0C 35 C4 6E 56 74 1B 10  F0 C4 64 F1 14 
11:42:37.440 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  89 C8 1A FA 0B 36 0A 46  13 46 FE 31 19 6B E5 24 
  4E 95 77 E5 
11:42:37.441 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C 35 C4 6E 56  74 1B 10 F0 C4 64 F1 14 
  89 C8 1A FA 0B 36 0A 46  13 46 FE 31 19 6B E5 24 
  4E 95 77 E5 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:37.441 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  85 88 37 E6 16 09 D4 74  BA 77 27 6E 46 20 0B 12 
  A6 38 7F D9 EA 29 F4 9F  9E 0B 75 72 2B 84 FD AC 
  94 ED 4D 97 09 FE 30 14  5D BF C2 47 CB F8 A7 D3 
  2D 07 AF B8 00 7F 69 2B  40 A6 3F 20 CC F8 F0 22 
11:42:37.441 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.442 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 40 85 88 37  E6 16 09 D4 74 BA 77 27 
  6E 46 20 0B 12 A6 38 7F  D9 EA 29 F4 9F 9E 0B 75 
  72 2B 84 FD AC 94 ED 4D  97 09 FE 30 14 5D BF C2 
  47 CB F8 A7 D3 2D 07 AF  B8 00 7F 69 2B 40 A6 3F 
  20 CC F8 F0 22 
11:42:37.456 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 6 new bytes from server
11:42:37.457 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 14 03 03 00 01 01 
11:42:37.457 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.457 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:37.457 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.494 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 69 new bytes from server
11:42:37.495 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after decryption:  
  14 00 00 0C 6B 19 94 5A  99 7A B5 23 64 C2 9F 49 
  4B 8B 6D 3E 9D EE A5 23  C2 62 02 7B 56 3E F7 EA 
  96 D7 06 D8 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:37.495 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Unpadded data:  
  14 00 00 0C 6B 19 94 5A  99 7A B5 23 64 C2 9F 49 
  4B 8B 6D 3E 9D EE A5 23  C2 62 02 7B 56 3E F7 EA 
  96 D7 06 D8 
11:42:37.495 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.495 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.495 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: FINISHED
11:42:37.495 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 6B 19 94 5A 99 7A B5 23 64 C2 9F 49 
11:42:37.495 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:37.496 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Application Data:
11:42:37.496 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 01  17 03 03 00 04 74 65 73 
  74 
11:42:37.496 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  4A 4F 0F 34 76 29 81 08  8A 25 3B 77 9E B2 1C CB 
  A8 84 E1 9D 
11:42:37.496 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  74 65 73 74 4A 4F 0F 34  76 29 81 08 8A 25 3B 77 
  9E B2 1C CB A8 84 E1 9D  07 07 07 07 07 07 07 07 
11:42:37.497 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  85 88 37 E6 16 09 D4 74  BA 77 27 6E 46 20 0B 12 
  9D 2C 01 29 12 A1 2A 6E  FA 9A 6C BC AB 2F CE 9C 
  FB B0 1A 7E C2 F9 58 A4  53 57 90 E0 DF D4 E7 01 
11:42:37.497 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.497 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  17 03 03 00 30 85 88 37  E6 16 09 D4 74 BA 77 27 
  6E 46 20 0B 12 9D 2C 01  29 12 A1 2A 6E FA 9A 6C 
  BC AB 2F CE 9C FB B0 1A  7E C2 F9 58 A4 53 57 90 
  E0 DF D4 E7 01 
11:42:37.498 [Thread-17] DEBUG  - test
11:42:37.499 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.499 [Thread-18] DEBUG  - new Thread started
11:42:37.501 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:37.502 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: SignatureAndHashAlgorithmsExtensionMessage 
11:42:37.502 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.502 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.SignatureAndHashAlgorithmsExtensionHandler.initializeClientHelloExtension(SignatureAndHashAlgorithmsExtensionHandler.java:66)
  New value: 9355
11:42:37.503 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.toString(ExtensionMessage.java:94)
  New value: 9355
11:42:37.503 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  63 C2 F3 BE FD 0C 5B 4F  70 D2 B6 0D 79 9E DD 74 
  43 B1 A2 A3 EE 17 E1 E0  F5 23 30 F1 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 9355
11:42:37.503 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.503 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0D 63 
  C2 F3 BE FD 0C 5B 4F 70  D2 B6 0D 79 9E DD 74 43 
  B1 A2 A3 EE 17 E1 E0 F5  23 30 F1 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 24 8B 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:37.504 [Thread-18] DEBUG  - Invalid signature_algorithms extension
javax.net.ssl.SSLProtocolException: Invalid signature_algorithms extension
	at sun.security.ssl.SignatureAlgorithmsExtension.<init>(HelloExtensions.java:791) ~[?:1.7.0_79]
	at sun.security.ssl.HelloExtensions.<init>(HelloExtensions.java:83) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:245) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:37.514 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:37.514 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:37.514 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.514 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:37.515 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:37.515 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:37.515 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:37.515 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.515 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.515 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.515 [Thread-19] DEBUG  - new Thread started
11:42:37.516 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  5E 0E 9F 7E 20 0B 99 50  AB 89 E5 C4 01 53 01 B7 
  D0 29 1D BD 90 F8 4E 87  F5 8C 23 64 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:37.517 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 2 record(s).
11:42:37.519 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 16 01 00 00  82 03 03 55 3A 10 0D 5E 
  0E 9F 7E 20 0B 99 50 AB  89 E5 C4 16 03 03 00 70 
  01 53 01 B7 D0 29 1D BD  90 F8 4E 87 F5 8C 23 64 
  00 00 0C C0 0F C0 05 C0  04 C0 03 C0 0D C0 0E 01 
  00 00 4D 00 0A 00 0A 00  08 00 13 00 17 00 18 00 
  19 00 0B 00 02 01 00 00  00 00 0C 00 0A 00 00 07 
  74 65 73 74 2E 64 65 00  01 00 01 04 00 0D 00 20 
  00 1E 06 01 06 02 06 03  05 01 05 02 05 03 04 01 
  04 02 04 03 03 01 03 02  03 03 02 01 02 02 02 03 
11:42:37.531 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:37.531 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.531 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.531 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:37.532 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Server Random: 
  95 D5 11 B3 FB 8D 63 D4  E5 E9 36 DA 36 B9 18 C4 
  43 1E C6 73 B9 9F AC CC  9C 2D DA 27 
  Session ID: 
  55 3A 10 0D 45 DD CF AB  40 D3 4B 03 14 82 AC 4A 
  1B 91 06 9C 20 A2 1A 7D  F5 7A A7 06 A7 16 7C D9 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:37.532 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.532 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:37.535 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:37.535 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.535 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:37.535 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:37.535 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.535 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:37.535 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:37.535 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:37.535 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:37.536 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:37.536 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:37.538 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:37.538 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 82132218547902500970430093119019614916729970567453325122245941036966446362983
11:42:37.538 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 37071070770713665482313550764888765392710371737101296729249811911807839731339
11:42:37.541 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  8A 70 1C 78 89 D2 3A EE  FF 52 38 91 A7 70 CF B0 
  FA E5 61 47 D1 1B 7E C5  94 9D A6 03 97 16 0F 61 
11:42:37.541 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0D 5E 0E 9F 7E  20 0B 99 50 AB 89 E5 C4 
  01 53 01 B7 D0 29 1D BD  90 F8 4E 87 F5 8C 23 64 
  55 3A 10 0D 95 D5 11 B3  FB 8D 63 D4 E5 E9 36 DA 
  36 B9 18 C4 43 1E C6 73  B9 9F AC CC 9C 2D DA 27 
11:42:37.542 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  29 19 C1 FB 3C 98 54 C8  99 F6 F1 10 21 D4 AB 6C 
  41 7A 24 71 46 2D AD FB  87 9E F4 CC 54 31 BB 0D 
  0B 4D 9A D3 31 C1 64 F7  F1 FA 40 98 B6 63 6B 27 
11:42:37.542 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:37.542 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.543 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 46 10 00 00  42 41 04 B5 95 30 36 13 
  28 5D DF AD 30 2B 44 3C  96 CF B8 2D 99 67 7A 6D 
  6E 55 D8 4B 71 10 19 91  7F F1 67 51 F5 7B 85 27 
  2A E2 F7 40 58 01 3A 9F  86 6C 2C FF 31 EE 74 CD 
  E9 C3 1E A5 2A 62 BB 85  1F 7E 8B 
11:42:37.543 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:37.543 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.543 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.543 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:37.543 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.544 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: 76 BA 85 72 5C 45 78 47 A7 F7 18 63 
11:42:37.545 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  1B B9 52 72 FC D2 BA E6  BA 7B C3 DD 85 2A 54 FF 
  7E 0B E2 EE 3C 05 D9 AE  03 03 B5 3F F1 64 83 8F 
  38 34 C6 75 3A 12 99 A1  7D 76 34 B0 A8 F2 84 97 
  71 C0 E6 15 A5 8C EF 02  89 3B B5 3F 8F D4 57 91 
  87 29 27 C0 A1 5F B0 4A  54 6E 1F E8 AE DF BD 08 
  8D 3B 33 47 71 C5 D1 42  71 EE 3F 01 E7 A9 BD 80 
  3F DC 46 3C 23 BD 7F F5 
11:42:37.545 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  1B B9 52 72 FC D2 BA E6  BA 7B C3 DD 85 2A 54 FF 
  7E 0B E2 EE 
11:42:37.546 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  3C 05 D9 AE 03 03 B5 3F  F1 64 83 8F 38 34 C6 75 
  3A 12 99 A1 
11:42:37.546 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  7D 76 34 B0 A8 F2 84 97  71 C0 E6 15 A5 8C EF 02 
  89 3B B5 3F 8F D4 57 91  87 29 27 C0 A1 5F B0 4A 
11:42:37.546 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  54 6E 1F E8 AE DF BD 08  8D 3B 33 47 71 C5 D1 42 
  71 EE 3F 01 E7 A9 BD 80  3F DC 46 3C 23 BD 7F F5 
11:42:37.547 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 76 BA 85 72 5C 45 78 47 A7 F7 18 63 
11:42:37.547 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 10 14 00 00 
  0C 76 BA 85 72 5C 45 78  47 A7 F7 18 63 
11:42:37.548 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  D0 7A 13 BE 1A 7E E5 78  B4 63 5A FF DB 14 49 92 
  6A B0 CD 12 
11:42:37.548 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C 76 BA 85 72  5C 45 78 47 A7 F7 18 63 
  D0 7A 13 BE 1A 7E E5 78  B4 63 5A FF DB 14 49 92 
  6A B0 CD 12 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:37.549 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  85 40 65 8D DF 5E 81 FF  91 EE 2F F3 32 68 EB 84 
  F3 6E CF 25 C1 43 B5 0C  F0 A7 C5 AF 81 F3 56 3F 
  7A 63 10 A3 82 71 8A E2  61 C1 EE 0D 4D DE 18 17 
  DE AF 90 C0 13 46 1F 51  71 CB C2 27 5E C8 23 3A 
11:42:37.549 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.549 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 40 85 40 65  8D DF 5E 81 FF 91 EE 2F 
  F3 32 68 EB 84 F3 6E CF  25 C1 43 B5 0C F0 A7 C5 
  AF 81 F3 56 3F 7A 63 10  A3 82 71 8A E2 61 C1 EE 
  0D 4D DE 18 17 DE AF 90  C0 13 46 1F 51 71 CB C2 
  27 5E C8 23 3A 
11:42:37.577 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 6 new bytes from server
11:42:37.577 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 14 03 03 00 01 01 
11:42:37.577 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.577 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:37.577 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.614 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 69 new bytes from server
11:42:37.614 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after decryption:  
  14 00 00 0C E3 C4 27 4B  17 82 4C D7 5F 24 20 01 
  C3 8A 4A F2 03 9A 94 78  65 61 B2 A5 DE C0 35 52 
  B3 F3 27 1E 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:37.614 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Unpadded data:  
  14 00 00 0C E3 C4 27 4B  17 82 4C D7 5F 24 20 01 
  C3 8A 4A F2 03 9A 94 78  65 61 B2 A5 DE C0 35 52 
  B3 F3 27 1E 
11:42:37.614 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: FINISHED
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: E3 C4 27 4B 17 82 4C D7 5F 24 20 01 
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Application Data:
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 01  17 03 03 00 04 74 65 73 
  74 
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  0D 09 37 9F 3F 45 D4 11  B3 89 16 2E BA 21 CC 56 
  A8 95 81 37 
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  74 65 73 74 0D 09 37 9F  3F 45 D4 11 B3 89 16 2E 
  BA 21 CC 56 A8 95 81 37  07 07 07 07 07 07 07 07 
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  85 40 65 8D DF 5E 81 FF  91 EE 2F F3 32 68 EB 84 
  EF 76 3B B9 FB 54 DB DD  8D 28 69 56 06 B2 CC 2E 
  8C 26 4A 17 01 0A 90 B0  5D D4 A2 E6 94 A0 73 66 
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.615 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  17 03 03 00 30 85 40 65  8D DF 5E 81 FF 91 EE 2F 
  F3 32 68 EB 84 EF 76 3B  B9 FB 54 DB DD 8D 28 69 
  56 06 B2 CC 2E 8C 26 4A  17 01 0A 90 B0 5D D4 A2 
  E6 94 A0 73 66 
11:42:37.616 [Thread-19] DEBUG  - test
11:42:37.617 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:37.617 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.618 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.618 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.618 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:37.618 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.617 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.617 [Thread-20] DEBUG  - new Thread started
11:42:37.618 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  55 EA F4 E9 9F FB 23 54  9A 30 A2 CE 1F 73 F7 23 
  ED 5F 4A 1D 01 A8 9A 92  96 8C 3F AD 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:37.619 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 4 record(s).
11:42:37.620 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 19 01 00 00  82 03 03 55 3A 10 0D 55 
  EA F4 E9 9F FB 23 54 9A  30 A2 CE 1F 73 F7 16 03 
  03 00 2F 23 ED 5F 4A 1D  01 A8 9A 92 96 8C 3F AD 
  00 00 0C C0 0F C0 05 C0  04 C0 03 C0 0D C0 0E 01 
  00 00 4D 00 0A 00 0A 00  08 00 13 00 17 00 18 00 
  19 00 16 03 03 00 0F 0B  00 02 01 00 00 00 00 0C 
  00 0A 00 00 07 74 16 03  03 00 2F 65 73 74 2E 64 
  65 00 01 00 01 04 00 0D  00 20 00 1E 06 01 06 02 
  06 03 05 01 05 02 05 03  04 01 04 02 04 03 03 01 
  03 02 03 03 02 01 02 02  02 03 
11:42:37.631 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:37.631 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.631 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.631 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:37.631 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Server Random: 
  84 AB A4 B9 FF 7D 80 F4  7A C5 6E 3C BB 81 F3 65 
  99 9D A1 30 52 BD 6E 18  69 C8 CA FB 
  Session ID: 
  55 3A 10 0D 58 9F 4A 6C  4C 1E E1 D0 97 CD 2F 3F 
  61 5C CC 43 B9 ED A2 EF  3F F2 FE 94 E7 6B 34 5F 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:37.631 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.631 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:37.633 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:37.633 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.633 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:37.633 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:37.634 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.634 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:37.634 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:37.634 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:37.634 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:37.634 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:37.634 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:37.636 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:37.636 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 16012402531043603522302727768695022808593352503907634836453539112476229355500
11:42:37.636 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 63376927985607056614516884542714801481646674114296224529890475068425239422035
11:42:37.638 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  F7 10 24 35 BD E9 E0 54  A4 15 66 66 86 EC 3D CA 
  E8 BB EE C0 92 8C FF 37  DA 43 0E 97 6D 99 1F B5 
11:42:37.638 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0D 55 EA F4 E9  9F FB 23 54 9A 30 A2 CE 
  1F 73 F7 23 ED 5F 4A 1D  01 A8 9A 92 96 8C 3F AD 
  55 3A 10 0D 84 AB A4 B9  FF 7D 80 F4 7A C5 6E 3C 
  BB 81 F3 65 99 9D A1 30  52 BD 6E 18 69 C8 CA FB 
11:42:37.638 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  D4 DD 8D 52 A5 8A 08 3A  42 0F 6D 3A 61 89 C0 07 
  9F 90 FE 53 4F 08 18 4D  CE EC 85 32 A8 99 DB 6D 
  EA 84 1E EF 0C A1 B7 2C  F6 DA 96 6D C3 36 AC 55 
11:42:37.638 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:37.639 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.639 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 46 10 00 00  42 41 04 23 66 B2 DB 8D 
  E6 73 E9 8F A6 53 47 B6  BA E6 B7 A3 F2 AB A8 C5 
  04 8C 90 1A 4B 07 61 80  15 C7 EC 8C 1E 11 EE F5 
  78 CE 89 FD 4F 5D 8C B6  5D 5E 8C 0C 3A BC 1E C2 
  14 7A 4D 16 0B D0 89 D4  AE 64 53 
11:42:37.639 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:37.639 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.639 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.639 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:37.639 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.639 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: A5 11 C3 D8 A3 FD FE 38 8C 99 1B 80 
11:42:37.640 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  2D 63 93 1F 88 D1 9C 85  E7 3C 93 CC 13 31 6F F0 
  BB 5B 2C 0C AB D1 0C F2  A9 2E 8E 3B 62 E4 15 70 
  F6 92 A2 53 CB FD 8F 08  A5 C9 BA D0 72 CC 08 54 
  CB 66 22 CA 61 96 26 99  5F 88 3F 31 0F 8E 48 B6 
  9C 47 FD 04 16 92 4F 9B  E0 80 8A 30 CC 21 81 2E 
  4F AA E9 72 8B 44 DB 81  64 2D BC 8C AC BE CB 4F 
  7A 80 E1 36 C6 C2 E6 A4 
11:42:37.640 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  2D 63 93 1F 88 D1 9C 85  E7 3C 93 CC 13 31 6F F0 
  BB 5B 2C 0C 
11:42:37.640 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  AB D1 0C F2 A9 2E 8E 3B  62 E4 15 70 F6 92 A2 53 
  CB FD 8F 08 
11:42:37.640 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  A5 C9 BA D0 72 CC 08 54  CB 66 22 CA 61 96 26 99 
  5F 88 3F 31 0F 8E 48 B6  9C 47 FD 04 16 92 4F 9B 
11:42:37.640 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  E0 80 8A 30 CC 21 81 2E  4F AA E9 72 8B 44 DB 81 
  64 2D BC 8C AC BE CB 4F  7A 80 E1 36 C6 C2 E6 A4 
11:42:37.641 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: A5 11 C3 D8 A3 FD FE 38 8C 99 1B 80 
11:42:37.641 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 10 14 00 00 
  0C A5 11 C3 D8 A3 FD FE  38 8C 99 1B 80 
11:42:37.641 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  40 37 83 D9 7F 98 F7 50  28 98 06 74 72 EA D9 16 
  33 A6 C1 81 
11:42:37.641 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C A5 11 C3 D8  A3 FD FE 38 8C 99 1B 80 
  40 37 83 D9 7F 98 F7 50  28 98 06 74 72 EA D9 16 
  33 A6 C1 81 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:37.641 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  9B E6 52 CC DA 13 3D 9A  83 48 8A F9 A2 87 6A F6 
  7B DA D8 41 63 46 76 F4  E6 9C 3A 0F 09 DC FF 34 
  7B 2C CD 39 26 50 6E B3  BC 08 E7 81 C6 1B 6D 91 
  92 F0 42 47 C1 A1 44 E5  88 5C 23 23 84 CB EE 12 
11:42:37.641 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.642 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 40 9B E6 52  CC DA 13 3D 9A 83 48 8A 
  F9 A2 87 6A F6 7B DA D8  41 63 46 76 F4 E6 9C 3A 
  0F 09 DC FF 34 7B 2C CD  39 26 50 6E B3 BC 08 E7 
  81 C6 1B 6D 91 92 F0 42  47 C1 A1 44 E5 88 5C 23 
  23 84 CB EE 12 
11:42:37.658 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 6 new bytes from server
11:42:37.658 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 14 03 03 00 01 01 
11:42:37.658 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.658 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:37.658 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.694 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 69 new bytes from server
11:42:37.694 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after decryption:  
  14 00 00 0C 14 49 29 7A  1D 59 27 BA A8 E4 63 CF 
  2B 0F BE EE 1B 9C EE DC  C0 40 29 4D E1 A5 22 50 
  03 2E BF C9 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:37.694 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Unpadded data:  
  14 00 00 0C 14 49 29 7A  1D 59 27 BA A8 E4 63 CF 
  2B 0F BE EE 1B 9C EE DC  C0 40 29 4D E1 A5 22 50 
  03 2E BF C9 
11:42:37.694 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.694 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.694 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: FINISHED
11:42:37.694 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 14 49 29 7A 1D 59 27 BA A8 E4 63 CF 
11:42:37.695 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:37.695 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Application Data:
11:42:37.695 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 01  17 03 03 00 04 74 65 73 
  74 
11:42:37.695 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  45 FE E0 74 76 5D 16 85  8B BE F6 B5 13 62 F9 5B 
  AE C7 75 42 
11:42:37.695 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  74 65 73 74 45 FE E0 74  76 5D 16 85 8B BE F6 B5 
  13 62 F9 5B AE C7 75 42  07 07 07 07 07 07 07 07 
11:42:37.695 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  9B E6 52 CC DA 13 3D 9A  83 48 8A F9 A2 87 6A F6 
  B0 6F CC 77 9B 47 22 09  BE 9D FD B0 4D 63 F0 48 
  4C 5C 91 B4 B8 69 FC 58  0F C7 66 AA 91 BB B9 08 
11:42:37.695 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.695 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  17 03 03 00 30 9B E6 52  CC DA 13 3D 9A 83 48 8A 
  F9 A2 87 6A F6 B0 6F CC  77 9B 47 22 09 BE 9D FD 
  B0 4D 63 F0 48 4C 5C 91  B4 B8 69 FC 58 0F C7 66 
  AA 91 BB B9 08 
11:42:37.696 [Thread-20] DEBUG  - test
11:42:37.696 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.697 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.697 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.697 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.bytearray.ModifiableByteArray de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage.ecPointEncoded
11:42:37.697 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field ecPointEncoded of type class de.rub.nds.tlsattacker.modifiablevariable.bytearray.ModifiableByteArray from the following class: ECDHClientKeyExchangeMessage 
11:42:37.697 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.698 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  18 38 CB 3F 43 5F 46 6A  1B 1B 0E EB 13 28 82 24 
  CC EE B1 57 38 9A E1 C9  CF 37 AF F3 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:37.698 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.698 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0D 18 
  38 CB 3F 43 5F 46 6A 1B  1B 0E EB 13 28 82 24 CC 
  EE B1 57 38 9A E1 C9 CF  37 AF F3 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:37.696 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.705 [Thread-21] DEBUG  - new Thread started
11:42:37.718 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:37.718 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.718 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.718 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:37.718 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Server Random: 
  5F 9E 08 6F 3C 9A 9B 29  64 A5 C5 8B 7A 37 49 C2 
  17 99 CA DB 8F 66 4F 92  F2 53 19 69 
  Session ID: 
  55 3A 10 0D 3F A7 6D 26  C6 A4 14 F8 2C AF DF EE 
  DB B0 80 01 23 50 AA A4  B2 6A 4B A9 D3 11 3D 25 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:37.718 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.718 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:37.720 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:37.720 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.720 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:37.720 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:37.720 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.721 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:37.721 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:37.721 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:37.721 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:37.721 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:37.721 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:37.723 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:37.723 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 71424504879623842893927358727361403147479032794796404211561483765088565899229
11:42:37.723 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 52383504468950775146181898839683538824080041661402938374925180578536413168959
11:42:37.725 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using ByteArrayXorModification in function:
  de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler.prepareKeyExchangeMessage(ECDHClientKeyExchangeHandler.java:120)
  New value: 
  9D E8 D6 50 17 D1 CC 0A  66 D6 39 B9 F7 BB 24 54 
  33 6D 85 F2 81 A5 9D C9  D2 1C 22 80 FD 9A 26 7D 
  92 7E D7 A7 B5 3B B6 A2  D2 9E 5A C5 79 1D 20 5C 
  4B B3 E7 04 36 31 B7 88  AC 50 DB 35 69 0B 85 3F 
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  0A 68 A2 C1 54 AC E2 60  3C 3B F4 C6 2F D9 E2 24 
  14 DE 87 66 DA DF 8F C7  C6 0E D5 C4 6E E6 8B E2 
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0D 18 38 CB 3F  43 5F 46 6A 1B 1B 0E EB 
  13 28 82 24 CC EE B1 57  38 9A E1 C9 CF 37 AF F3 
  55 3A 10 0D 5F 9E 08 6F  3C 9A 9B 29 64 A5 C5 8B 
  7A 37 49 C2 17 99 CA DB  8F 66 4F 92 F2 53 19 69 
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  E4 13 17 EF 8A B8 16 59  14 46 0C 0A 3A 04 59 EC 
  CE 76 66 A0 97 0C 42 27  19 AC A8 6D 3F F5 BD 4D 
  43 D2 F2 B5 C3 7C 23 D3  7D D6 2A 36 89 EA 84 D4 
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 3 record(s).
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 0A 10 00 00  42 41 04 9D E8 D6 50 16 
  03 03 00 07 17 D1 CC 0A  66 D6 39 16 03 03 00 35 
  B9 F7 BB 24 54 33 6D 85  F2 81 A5 9D C9 D2 1C 22 
  80 FD 9A 26 7D 92 7E D7  A7 B5 3B B6 A2 D2 9E 5A 
  C5 79 1D 20 5C 4B B3 E7  04 36 31 B7 88 AC 50 DB 
  35 69 0B 85 3F 
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.728 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:37.729 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.729 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: 2C 0C 3D 99 69 07 ED D8 C4 82 0F DF 
11:42:37.729 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  3B F1 E7 FD 09 82 7B 03  07 B5 09 DB 7A 82 0C D4 
  C3 ED AC BC B5 B7 E2 E2  84 D5 E9 99 24 1E CD A2 
  86 CE 39 50 B3 A0 2C 54  91 CD 16 D7 46 76 86 56 
  7C 96 FE B1 40 71 09 D1  C0 BE 1F FB C0 4F CB C5 
  11 67 05 C9 17 92 73 4C  9E 8A 1D 73 C0 A1 F6 6D 
  BB 1D 0C 7E AE 55 DC BA  C7 C4 57 80 64 42 AB FC 
  17 FE CD 19 2F 40 77 EB 
11:42:37.729 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  3B F1 E7 FD 09 82 7B 03  07 B5 09 DB 7A 82 0C D4 
  C3 ED AC BC 
11:42:37.729 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  B5 B7 E2 E2 84 D5 E9 99  24 1E CD A2 86 CE 39 50 
  B3 A0 2C 54 
11:42:37.729 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  91 CD 16 D7 46 76 86 56  7C 96 FE B1 40 71 09 D1 
  C0 BE 1F FB C0 4F CB C5  11 67 05 C9 17 92 73 4C 
11:42:37.729 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  9E 8A 1D 73 C0 A1 F6 6D  BB 1D 0C 7E AE 55 DC BA 
  C7 C4 57 80 64 42 AB FC  17 FE CD 19 2F 40 77 EB 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 2C 0C 3D 99 69 07 ED D8 C4 82 0F DF 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 08 14 00 00 
  0C 2C 0C 3D 99 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  EE A9 C1 1D 33 5C B3 B7  A9 71 47 1E E3 EE FF 53 
  B8 AA 8D 7D 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C 2C 0C 3D 99  EE A9 C1 1D 33 5C B3 B7 
  A9 71 47 1E E3 EE FF 53  B8 AA 8D 7D 03 03 03 03 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  35 D6 12 60 5E 7B 52 4A  EF C7 94 DA D9 A7 F2 AD 
  15 64 97 B4 BF CF 8A F0  49 E4 E6 0A 62 53 98 85 
  CB BA C3 B5 B3 83 3B 62  0C FF D8 AB 88 90 4F 5F 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 01  16 03 03 00 08 69 07 ED 
  D8 C4 82 0F DF 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  B1 B9 AA A4 18 86 2C 4E  7E 7F 8D AA 71 E1 12 9D 
  AD FA B4 A1 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  69 07 ED D8 C4 82 0F DF  B1 B9 AA A4 18 86 2C 4E 
  7E 7F 8D AA 71 E1 12 9D  AD FA B4 A1 03 03 03 03 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  35 D6 12 60 5E 7B 52 4A  EF C7 94 DA D9 A7 F2 AD 
  29 83 01 A0 DD A6 FF 0D  4F BB A9 F3 09 E5 D1 F4 
  FF 3B 81 C6 09 C3 F2 24  A7 3E 37 AE 52 75 37 A5 
11:42:37.730 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 2 record(s).
11:42:37.731 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 30 35 D6 12  60 5E 7B 52 4A EF C7 94 
  DA D9 A7 F2 AD 15 64 97  B4 BF CF 8A F0 49 E4 E6 
  0A 62 53 98 85 CB BA C3  B5 B3 83 3B 62 0C FF D8 
  AB 88 90 4F 5F 16 03 03  00 30 35 D6 12 60 5E 7B 
  52 4A EF C7 94 DA D9 A7  F2 AD 29 83 01 A0 DD A6 
  FF 0D 4F BB A9 F3 09 E5  D1 F4 FF 3B 81 C6 09 C3 
  F2 24 A7 3E 37 AE 52 75  37 A5 
11:42:37.731 [Thread-21] DEBUG  - java.lang.RuntimeException: Could not generate secret
javax.net.ssl.SSLException: java.lang.RuntimeException: Could not generate secret
	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1904) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1862) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1845) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1771) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:113) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
Caused by: java.lang.RuntimeException: Could not generate secret
	at sun.security.ssl.ECDHCrypt.getAgreedSecret(ECDHCrypt.java:113) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.clientKeyExchange(ServerHandshaker.java:1485) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:268) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	... 9 more
Caused by: java.security.spec.InvalidKeySpecException: Could not create EC public key
	at sun.security.pkcs11.P11ECKeyFactory.engineGeneratePublic(P11ECKeyFactory.java:169) ~[sunpkcs11.jar:1.7.0_79]
	at java.security.KeyFactory.generatePublic(KeyFactory.java:334) ~[?:1.7.0_79]
	at sun.security.ssl.ECDHCrypt.getAgreedSecret(ECDHCrypt.java:110) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.clientKeyExchange(ServerHandshaker.java:1485) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:268) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	... 9 more
Caused by: sun.security.pkcs11.wrapper.PKCS11Exception: CKR_TEMPLATE_INCONSISTENT
	at sun.security.pkcs11.wrapper.PKCS11.C_CreateObject(Native Method) ~[sunpkcs11.jar:1.7.0_79]
	at sun.security.pkcs11.P11ECKeyFactory.generatePublic(P11ECKeyFactory.java:233) ~[sunpkcs11.jar:1.7.0_79]
	at sun.security.pkcs11.P11ECKeyFactory.engineGeneratePublic(P11ECKeyFactory.java:164) ~[sunpkcs11.jar:1.7.0_79]
	at java.security.KeyFactory.generatePublic(KeyFactory.java:334) ~[?:1.7.0_79]
	at sun.security.ssl.ECDHCrypt.getAgreedSecret(ECDHCrypt.java:110) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.clientKeyExchange(ServerHandshaker.java:1485) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:268) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	... 9 more
11:42:37.741 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:37.741 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 03 00 02 02 50 
11:42:37.741 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.741 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:37.741 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:37.742 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: INTERNAL_ERROR
11:42:37.742 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:37.742 [Thread-22] DEBUG  - new Thread started
11:42:37.742 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.743 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:37.743 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: MaxFragmentLengthExtensionMessage 
11:42:37.743 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:37.743 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ServerNameIndicationExtensionMessage 
11:42:37.743 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.744 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.ServerNameIndicationExtensionHandler.initializeClientHelloExtension(ServerNameIndicationExtensionHandler.java:69)
  New value: -19650
11:42:37.744 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.MaxFragmentLengthExtensionHandler.initializeClientHelloExtension(MaxFragmentLengthExtensionHandler.java:59)
  New value: 971
11:42:37.744 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.toString(ExtensionMessage.java:94)
  New value: -19650
11:42:37.744 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.toString(ExtensionMessage.java:94)
  New value: 971
11:42:37.744 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  4F E5 39 D2 9B F1 D3 97  9D 1B E8 5B 9D 73 C9 2F 
  24 64 96 D7 F8 3F 88 C3  6E ED AE 7E 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: -19650
    Extension type: 00 01 
    Extension length: 971
    Extension type: 00 0D 
    Extension length: 32
11:42:37.744 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.744 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0D 4F 
  E5 39 D2 9B F1 D3 97 9D  1B E8 5B 9D 73 C9 2F 24 
  64 96 D7 F8 3F 88 C3 6E  ED AE 7E 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 B3 3E 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 03 CB 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:37.745 [Thread-22] DEBUG  - Invalid server_name extension
javax.net.ssl.SSLProtocolException: Invalid server_name extension
	at sun.security.ssl.ServerNameExtension.<init>(HelloExtensions.java:348) ~[?:1.7.0_79]
	at sun.security.ssl.HelloExtensions.<init>(HelloExtensions.java:81) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:245) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:37.755 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:37.755 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:37.755 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.755 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:37.755 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:37.755 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:37.755 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:37.756 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:37.756 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.756 [Thread-23] DEBUG  - new Thread started
11:42:37.756 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.756 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.756 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  B9 8E C8 13 91 8F 6C 54  F3 B9 54 B6 3D CC A9 E8 
  19 8F 51 E5 B1 EC F4 2D  83 BE 3E AD 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:37.756 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.757 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0D B9 
  8E C8 13 91 8F 6C 54 F3  B9 54 B6 3D CC A9 E8 19 
  8F 51 E5 B1 EC F4 2D 83  BE 3E AD 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:37.770 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:37.770 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.770 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.770 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:37.770 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Server Random: 
  65 09 E4 1A FA 89 7E 48  2C BF FF DA CE 3E ED 77 
  F7 EE 5A 1A 64 90 92 D4  BC F8 16 C5 
  Session ID: 
  55 3A 10 0D B6 79 ED 11  30 5A 53 D2 D0 FB 6C 41 
  0C 48 D5 21 62 BF 5A D6  D4 AF EE 4B B9 C0 3B 31 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:37.770 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.770 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:37.772 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:37.772 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.773 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:37.773 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:37.773 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.773 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:37.773 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:37.773 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:37.773 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:37.773 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:37.773 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:37.774 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:37.774 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 57933792786057926565153802641225725814483587184058707257954022537817790294300
11:42:37.775 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 9794286655545772742472721680033828298032498199467455087661288388724145100036
11:42:37.776 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  B1 0B 0D EA A7 4A DD 73  DE 4B EC 74 4E 33 B1 70 
  39 A4 66 BF DF C5 41 12  D5 E2 52 9A A3 7C 59 20 
11:42:37.776 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0D B9 8E C8 13  91 8F 6C 54 F3 B9 54 B6 
  3D CC A9 E8 19 8F 51 E5  B1 EC F4 2D 83 BE 3E AD 
  55 3A 10 0D 65 09 E4 1A  FA 89 7E 48 2C BF FF DA 
  CE 3E ED 77 F7 EE 5A 1A  64 90 92 D4 BC F8 16 C5 
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  84 95 CD D8 2A 89 91 6F  BE EC 9E 59 C4 72 9F BE 
  6F 76 FE D3 BE E7 8C E7  2B 0B 7E 1A 0B 83 82 25 
  CD 33 A0 94 5C 6F 92 9C  AE B7 A5 1C 33 3D C1 E8 
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 46 10 00 00  42 41 04 80 15 5D 5D 58 
  D2 C7 7B FB 2A E8 52 5B  5A 01 E0 AC 36 87 CE 34 
  6F 29 9C 4A 2C 9B B5 1B  AF 29 1C 15 A7 5E AB 0B 
  20 44 ED 91 5C 9D 16 E6  01 48 2F 94 05 A7 DC 43 
  40 AC 18 B6 61 33 22 40  79 95 04 
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.777 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: 7B A4 4C BB B5 07 71 F0 40 4E 40 17 
11:42:37.778 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  10 41 7F 31 19 A0 77 80  09 FF 54 6F 58 4F 05 2F 
  CB 00 54 34 07 F3 42 08  F3 2D 88 F5 F1 7D 3E 02 
  65 88 94 67 C2 38 23 14  DE D7 B0 37 F7 D6 81 D5 
  1C 75 30 F0 3A 10 96 C8  0A 7D B8 27 EF 06 2B 93 
  78 8C F5 C7 E1 15 94 CB  7B DD 53 DE 34 F2 96 D7 
  B8 47 B6 1E 16 A5 02 75  E0 9F AE 7D 95 BD 8B 45 
  B1 E7 F9 41 72 5E 27 A1 
11:42:37.778 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  10 41 7F 31 19 A0 77 80  09 FF 54 6F 58 4F 05 2F 
  CB 00 54 34 
11:42:37.778 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  07 F3 42 08 F3 2D 88 F5  F1 7D 3E 02 65 88 94 67 
  C2 38 23 14 
11:42:37.778 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  DE D7 B0 37 F7 D6 81 D5  1C 75 30 F0 3A 10 96 C8 
  0A 7D B8 27 EF 06 2B 93  78 8C F5 C7 E1 15 94 CB 
11:42:37.778 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  7B DD 53 DE 34 F2 96 D7  B8 47 B6 1E 16 A5 02 75 
  E0 9F AE 7D 95 BD 8B 45  B1 E7 F9 41 72 5E 27 A1 
11:42:37.778 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 7B A4 4C BB B5 07 71 F0 40 4E 40 17 
11:42:37.779 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 0E 14 00 00 
  0C 7B A4 4C BB B5 07 71  F0 40 4E 
11:42:37.779 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  65 17 31 0B 31 17 C9 29  A7 AB 85 A0 7D 6F 44 24 
  C7 E6 4C A3 
11:42:37.779 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C 7B A4 4C BB  B5 07 71 F0 40 4E 65 17 
  31 0B 31 17 C9 29 A7 AB  85 A0 7D 6F 44 24 C7 E6 
  4C A3 0D 0D 0D 0D 0D 0D  0D 0D 0D 0D 0D 0D 0D 0D 
11:42:37.779 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  7F F2 0C A2 CE 50 D6 1F  86 A4 38 BA 2A 95 7E B3 
  8B 12 60 62 26 26 E8 DB  80 3F 31 93 D2 3D 4E 88 
  07 FB 9D D6 81 26 95 10  F4 E6 48 35 4D C0 37 61 
  0A 8B 68 CB 9B 42 37 46  60 7E CF C1 EE 37 A3 80 
11:42:37.779 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  00 00 00 00 00 00 00 01 16 03 03 00 02 40 17 
11:42:37.779 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  0C 27 0C 4C 89 59 4A 3A  7A 35 24 D3 BA C7 BC C4 
  A1 1B A6 C2 
11:42:37.779 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  40 17 0C 27 0C 4C 89 59  4A 3A 7A 35 24 D3 BA C7 
  BC C4 A1 1B A6 C2 09 09  09 09 09 09 09 09 09 09 
11:42:37.779 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  7F F2 0C A2 CE 50 D6 1F  86 A4 38 BA 2A 95 7E B3 
  86 AA 4C 65 E0 E1 B1 11  07 E9 E8 DC 7C FD 49 A7 
  2B D5 9A 5B DC 8E 00 36  32 02 52 D7 EC 78 46 FB 
11:42:37.779 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 2 record(s).
11:42:37.780 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 40 7F F2 0C  A2 CE 50 D6 1F 86 A4 38 
  BA 2A 95 7E B3 8B 12 60  62 26 26 E8 DB 80 3F 31 
  93 D2 3D 4E 88 07 FB 9D  D6 81 26 95 10 F4 E6 48 
  35 4D C0 37 61 0A 8B 68  CB 9B 42 37 46 60 7E CF 
  C1 EE 37 A3 80 16 03 03  00 30 7F F2 0C A2 CE 50 
  D6 1F 86 A4 38 BA 2A 95  7E B3 86 AA 4C 65 E0 E1 
  B1 11 07 E9 E8 DC 7C FD  49 A7 2B D5 9A 5B DC 8E 
  00 36 32 02 52 D7 EC 78  46 FB 
11:42:37.795 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 6 new bytes from server
11:42:37.795 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 14 03 03 00 01 01 
11:42:37.795 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.795 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:37.795 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.834 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 69 new bytes from server
11:42:37.834 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after decryption:  
  14 00 00 0C FA 79 AD 80  1A 64 0C F6 B4 84 59 A9 
  E5 41 B4 7E FD F7 AA 88  2B 6A B4 09 85 F8 BA D8 
  2E 6C 5D 56 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:37.834 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Unpadded data:  
  14 00 00 0C FA 79 AD 80  1A 64 0C F6 B4 84 59 A9 
  E5 41 B4 7E FD F7 AA 88  2B 6A B4 09 85 F8 BA D8 
  2E 6C 5D 56 
11:42:37.834 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.834 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.834 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: FINISHED
11:42:37.835 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: FA 79 AD 80 1A 64 0C F6 B4 84 59 A9 
11:42:37.835 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:37.835 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Application Data:
11:42:37.835 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 02  17 03 03 00 04 74 65 73 
  74 
11:42:37.835 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  7D 8F B3 77 FE B8 2A 7C  BB 2B 45 5D 2D EE F9 65 
  CD 55 C6 A0 
11:42:37.835 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  74 65 73 74 7D 8F B3 77  FE B8 2A 7C BB 2B 45 5D 
  2D EE F9 65 CD 55 C6 A0  07 07 07 07 07 07 07 07 
11:42:37.835 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  7F F2 0C A2 CE 50 D6 1F  86 A4 38 BA 2A 95 7E B3 
  6C 61 D3 DA F3 F9 C6 C1  8A A8 F4 FB 6B 6F 35 0B 
  16 F5 0B B9 49 81 64 FA  F2 61 0E 2C 77 73 3E C4 
11:42:37.835 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.835 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  17 03 03 00 30 7F F2 0C  A2 CE 50 D6 1F 86 A4 38 
  BA 2A 95 7E B3 6C 61 D3  DA F3 F9 C6 C1 8A A8 F4 
  FB 6B 6F 35 0B 16 F5 0B  B9 49 81 64 FA F2 61 0E 
  2C 77 73 3E C4 
11:42:37.836 [Thread-23] DEBUG  - test
11:42:37.837 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.837 [Thread-24] DEBUG  - new Thread started
11:42:37.846 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Duplicating class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage 
  and inserting it at position 2
11:42:37.846 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  77 60 F2 35 7E A6 EE 9D  A9 3A AD EF 77 43 F4 27 
  BB 9D FC 37 98 85 57 EA  AA 44 96 2B 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 5 record(s).
11:42:37.847 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 1F 01 00 00  82 03 03 55 3A 10 0D 77 
  60 F2 35 7E A6 EE 9D A9  3A AD EF 77 43 F4 27 BB 
  9D FC 37 98 16 03 03 00  00 16 03 03 00 11 85 57 
  EA AA 44 96 2B 00 00 0C  C0 0F C0 05 C0 04 C0 16 
  03 03 00 28 03 C0 0D C0  0E 01 00 00 4D 00 0A 00 
  0A 00 08 00 13 00 17 00  18 00 19 00 0B 00 02 01 
  00 00 00 00 0C 00 0A 00  00 07 74 65 16 03 03 00 
  2E 73 74 2E 64 65 00 01  00 01 04 00 0D 00 20 00 
  1E 06 01 06 02 06 03 05  01 05 02 05 03 04 01 04 
  02 04 03 03 01 03 02 03  03 02 01 02 02 02 03 
11:42:37.858 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:37.858 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.858 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.858 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:37.859 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Server Random: 
  07 2A EF 25 EE C2 0D A9  5B A5 AF 36 54 F6 D8 32 
  5A B8 AE E3 81 FA AF B9  E7 CD 17 2F 
  Session ID: 
  55 3A 10 0D D5 1E 85 60  3B B2 5A 3F 65 F4 77 0F 
  09 65 A4 97 70 71 6E E6  A5 AE 1E 7A C9 61 68 78 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:37.859 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.859 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:37.859 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:37.861 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:37.861 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.861 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:37.861 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:37.861 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:37.862 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.862 [Thread-25] DEBUG  - new Thread started
11:42:37.861 [Thread-24] DEBUG  - Remote host closed connection during handshake
javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:953) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at sun.security.ssl.InputRecord.read(InputRecord.java:482) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:934) ~[?:1.7.0_79]
	... 12 more
11:42:37.863 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.EllipticCurvesExtensionMessage.supportedCurvesLength
11:42:37.863 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field supportedCurvesLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: EllipticCurvesExtensionMessage 
11:42:37.863 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:37.863 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: MaxFragmentLengthExtensionMessage 
11:42:37.864 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.handshake.messages.HandshakeMessage.length
11:42:37.864 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field length of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: FinishedMessage 
11:42:37.865 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.EllipticCurvesExtensionMessage.supportedCurvesLength
11:42:37.865 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field supportedCurvesLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: EllipticCurvesExtensionMessage 
11:42:37.865 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage.cipherSuiteLength
11:42:37.865 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field cipherSuiteLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: ClientHelloMessage 
11:42:37.866 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Executing random variable modification on field de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.extensionLength
11:42:37.866 [main] INFO  de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Modifying field extensionLength of type class de.rub.nds.tlsattacker.modifiablevariable.integer.ModifiableInteger from the following class: MaxFragmentLengthExtensionMessage 
11:42:37.866 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.866 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerSubtractModification in function:
  de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ClientHelloHandler.prepareMessageAction(ClientHelloHandler.java:86)
  New value: -31866
11:42:37.866 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerExplicitValueModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.EllipticCurvesExtensionHandler.initializeClientHelloExtension(EllipticCurvesExtensionHandler.java:62)
  New value: 24270
11:42:37.866 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerExplicitValueModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.EllipticCurvesExtensionHandler.initializeClientHelloExtension(EllipticCurvesExtensionHandler.java:66)
  New value: 24270
11:42:37.866 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.handlers.MaxFragmentLengthExtensionHandler.initializeClientHelloExtension(MaxFragmentLengthExtensionHandler.java:59)
  New value: 2160
11:42:37.867 [main] DEBUG de.rub.nds.tlsattacker.modifiablevariable.VariableModification - Using IntegerAddModification in function:
  de.rub.nds.tlsattacker.tls.protocol.extension.messages.ExtensionMessage.toString(ExtensionMessage.java:94)
  New value: 2160
11:42:37.867 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  FD B0 38 77 D3 1F 8C B6  6E 7E 2D 7A 36 6C CC FC 
  C1 A7 82 20 42 60 92 60  11 B5 61 8B 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 24272
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 2160
    Extension type: 00 0D 
    Extension length: 32
11:42:37.867 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.867 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0D FD 
  B0 38 77 D3 1F 8C B6 6E  7E 2D 7A 36 6C CC FC C1 
  A7 82 20 42 60 92 60 11  B5 61 8B 00 83 86 C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  5E D0 5E CE 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 08 70 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:37.867 [Thread-25] DEBUG  - Not enough data to fill declared vector size
javax.net.ssl.SSLException: Not enough data to fill declared vector size
	at sun.security.ssl.HandshakeInStream.verifyLength(HandshakeInStream.java:221) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeInStream.getBytes16(HandshakeInStream.java:202) ~[?:1.7.0_79]
	at sun.security.ssl.CipherSuiteList.<init>(CipherSuiteList.java:106) ~[?:1.7.0_79]
	at sun.security.ssl.HandshakeMessage$ClientHello.<init>(HandshakeMessage.java:242) ~[?:1.7.0_79]
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:209) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:901) ~[?:1.7.0_79]
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:837) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1023) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1332) ~[?:1.7.0_79]
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:889) ~[?:1.7.0_79]
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:102) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325) ~[?:1.7.0_79]
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177) ~[?:1.7.0_79]
	at java.io.InputStreamReader.read(InputStreamReader.java:184) ~[?:1.7.0_79]
	at java.io.BufferedReader.fill(BufferedReader.java:154) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:317) ~[?:1.7.0_79]
	at java.io.BufferedReader.readLine(BufferedReader.java:382) ~[?:1.7.0_79]
	at de.rub.nds.tlsattacker.tlsserver.ConnectionHandler.run(ConnectionHandler.java:54) [TLS-Server-1.0-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.lang.Thread.run(Thread.java:745) [?:1.7.0_79]
11:42:37.878 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 7 new bytes from server
11:42:37.878 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 15 03 01 00 02 02 0A 
11:42:37.878 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.878 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: ALERT
11:42:37.878 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The configured protocol message is not equal to the message being parsed or the message was not found.
11:42:37.878 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ALERT message:
  Level: FATAL
  Description: UNEXPECTED_MESSAGE
11:42:37.878 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The workflow execution is stopped because of a FATAL error
11:42:37.879 [main] DEBUG de.rub.nds.tlsattacker.fuzzer.utils.FuzzingHelper - Adding a new record to class de.rub.nds.tlsattacker.tls.protocol.application.messages.ApplicationMessage
11:42:37.879 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ClientHelloMessage
11:42:37.879 [Thread-3] DEBUG de.rub.nds.tlsattacker.tlsserver.TLSServer - || waiting for connections...

11:42:37.879 [Thread-26] DEBUG  - new Thread started
11:42:37.879 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_HELLO
  Handshake Message Length: 130
  Protocol Version: TLS12
  Client Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Client Random: 
  9E 61 57 04 63 F2 8A 13  12 BF C9 AA 53 2D 97 CE 
  BA C8 23 53 12 6D 1F 52  3B 35 BB 32 
  Session ID: 
  Supported Cipher Suites: C0 0F C0 05 C0 04 C0 03 C0 0D C0 0E 
  Supported Compression Methods: 00 
  Extensions: 
    Extension type: 00 0A 
    Extension length: 10
    Extension type: 00 0B 
    Extension length: 2
    Extension type: 00 00 
    Extension length: 12
    Extension type: 00 01 
    Extension length: 1
    Extension type: 00 0D 
    Extension length: 32
11:42:37.879 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.879 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 86 01 00 00  82 03 03 55 3A 10 0D 9E 
  61 57 04 63 F2 8A 13 12  BF C9 AA 53 2D 97 CE BA 
  C8 23 53 12 6D 1F 52 3B  35 BB 32 00 00 0C C0 0F 
  C0 05 C0 04 C0 03 C0 0D  C0 0E 01 00 00 4D 00 0A 
  00 0A 00 08 00 13 00 17  00 18 00 19 00 0B 00 02 
  01 00 00 00 00 0C 00 0A  00 00 07 74 65 73 74 2E 
  64 65 00 01 00 01 04 00  0D 00 20 00 1E 06 01 06 
  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03 
  01 03 02 03 03 02 01 02  02 02 03 
11:42:37.890 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 559 new bytes from server
11:42:37.891 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.891 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.891 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO
11:42:37.891 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO
  Handshake Message Length: 70
  Protocol Version: TLS12
  Server Unix Time: Fri Apr 24 11:42:37 CEST 2015
  Server Random: 
  D9 32 60 34 92 A1 EB 8D  02 6A 1A 35 93 FE C6 1F 
  29 15 1F 41 10 08 DB 84  8D 91 D2 0C 
  Session ID: 
  55 3A 10 0D 4C EF 73 32  B5 4F 08 FE 94 6E 4B 0B 
  9D 00 B7 B2 4A F7 C8 4B  7C 15 5D E4 1F 8F F5 68 
  Selected Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
  Selected Compression Method: NULL
  Extensions: 
11:42:37.891 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.891 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: CERTIFICATE
11:42:37.893 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
CERTIFICATE
  Handshake Message Length: 472
  Certificates Length: 469
  Certificate:
  [0]         Version: 3
         SerialNumber: 705330658
             IssuerDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Start Date: Fri Mar 13 11:31:51 CET 2015
           Final Date: Wed Sep 02 12:31:51 CEST 2020
            SubjectDN: C=de,ST=nrw,L=bochum,O=Unknown,OU=rub,CN=juraj
           Public Key: EC Public Key
            X: a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647
            Y: 9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea

  Signature Algorithm: SHA512WITHECDSA
            Signature: 3044021f362cf1e3816908ed08efff799e61b5b9
                       8aa22600123733e7d1dd498baea7720221009b1b
                       f749c8618417f6a9fd9312eb00513ef355022469
                       6556cfb48a5c5e9e25e7
       Extensions: 
                       critical(false) 2.5.29.14 value = DER Octet String[20] 


11:42:37.893 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: HANDSHAKE
11:42:37.893 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following handshake message: SERVER_HELLO_DONE
11:42:37.893 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
SERVER_HELLO_DONE
  Handshake Message Length: 0
11:42:37.893 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.ECDHClientKeyExchangeMessage
11:42:37.893 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Parsed the following EC domain parameters from the certificate: 
11:42:37.894 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Curve order: 115792089210356248762697446949407573529996955224135760342422259061068512044369
11:42:37.894 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter A: ffffffff00000001000000000000000000000000fffffffffffffffffffffffc
11:42:37.894 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Parameter B: 5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
11:42:37.894 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Base point: (6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,1) 
11:42:37.894 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler -   Public key point Q: (a41de0b783a329efb58457342a90791dd8b5493485effe7ffcb4ed96a7235647,9356f2adea290ae0d7133cf50839495c4a139ab32f33b682e7009cffdcefd3ea,1) 
11:42:37.895 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Using the following point:
11:42:37.895 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - X: 15239427297346113260497822718447213065500883900497880224247486704317716003258
11:42:37.895 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Y: 72530277044896113081072198109299963241885910041000756121131528303102756334675
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed PreMaster Secret: 
  41 36 AA 7C 83 A9 F0 77  72 C0 63 25 39 7A 37 C8 
  44 51 95 96 91 91 D7 90  CB B8 7B 11 42 E4 C2 65 
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Client Server Random: 
  55 3A 10 0D 9E 61 57 04  63 F2 8A 13 12 BF C9 AA 
  53 2D 97 CE BA C8 23 53  12 6D 1F 52 3B 35 BB 32 
  55 3A 10 0D D9 32 60 34  92 A1 EB 8D 02 6A 1A 35 
  93 FE C6 1F 29 15 1F 41  10 08 DB 84 8D 91 D2 0C 
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.ECDHClientKeyExchangeHandler - Computed Master Secret: 
  F6 21 7E FF FC 7C B1 CA  BB C5 BB AA 05 72 B4 97 
  87 70 05 44 4F 36 55 90  11 5B 3A A2 EA 49 E9 09 
  E7 71 1E 58 58 4E 83 FA  EE 17 B4 F8 4A F7 AA 67 
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
CLIENT_KEY_EXCHANGE
  Handshake Message Length: 66
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 46 10 00 00  42 41 04 21 B1 35 CE A4 
  87 FB 14 DF B4 8B DD 78  BD D0 31 AF 3A 0E 30 E4 
  DD 90 19 5F 5F FF 57 B5  98 79 BA A0 5A AE 99 42 
  89 B1 51 4A FE 51 1D 4E  0A F6 80 B8 2B E9 6F 8A 
  C7 27 8B 71 6C 4B F4 0B  53 2C 53 
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.ccs.messages.ChangeCipherSpecMessage
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 14 03 03 00 01 01 
11:42:37.897 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Preparing the following protocol message to send: class de.rub.nds.tlsattacker.tls.protocol.handshake.messages.FinishedMessage
11:42:37.898 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.handshake.handlers.FinishedHandler - Computed verify data: 49 83 07 B9 42 CD F7 23 7E F6 F2 6D 
11:42:37.898 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - A new key block was generated: 
  83 EF A9 B3 7B BE 8C A1  28 A0 23 D8 7E 29 7D F8 
  9E 12 EE 4B D4 D3 E7 BF  0C EB E3 8B 13 9E E7 8F 
  80 FF 0A 5A 5D 2C B9 D1  64 36 49 AA B9 11 5B 3F 
  0C 4E 05 BE CF D6 CC 54  61 2A E7 63 F2 18 B0 D4 
  FA A9 AA 06 E6 03 8F 91  7F 17 47 53 0D 72 EA 03 
  61 E9 4E 1E 68 02 3F 9D  69 CA 6F 08 33 68 1E 4A 
  C1 54 EC 15 23 C5 BE D1 
11:42:37.898 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client MAC write Secret:  
  83 EF A9 B3 7B BE 8C A1  28 A0 23 D8 7E 29 7D F8 
  9E 12 EE 4B 
11:42:37.898 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server MAC write Secret:  
  D4 D3 E7 BF 0C EB E3 8B  13 9E E7 8F 80 FF 0A 5A 
  5D 2C B9 D1 
11:42:37.898 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Client write key:  
  64 36 49 AA B9 11 5B 3F  0C 4E 05 BE CF D6 CC 54 
  61 2A E7 63 F2 18 B0 D4  FA A9 AA 06 E6 03 8F 91 
11:42:37.898 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - Server write key:  
  7F 17 47 53 0D 72 EA 03  61 E9 4E 1E 68 02 3F 9D 
  69 CA 6F 08 33 68 1E 4A  C1 54 EC 15 23 C5 BE D1 
11:42:37.898 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - 
Finished message:
FINISHED
  Handshake Message Length: 12
  Verify Data: 49 83 07 B9 42 CD F7 23 7E F6 F2 6D 
11:42:37.899 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - The MAC was caluculated over the following data: 
  
  00 00 00 00 00 00 00 00  16 03 03 00 10 14 00 00 
  0C 49 83 07 B9 42 CD F7  23 7E F6 F2 6D 
11:42:37.899 [main] DEBUG de.rub.nds.tlsattacker.tls.crypto.TlsRecordBlockCipher - MAC result: 
  
  15 C6 32 CE 24 57 7B D2  01 3C CE E8 52 6C 08 4B 
  38 B8 23 B0 
11:42:37.899 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data before encryption:  
  14 00 00 0C 49 83 07 B9  42 CD F7 23 7E F6 F2 6D 
  15 C6 32 CE 24 57 7B D2  01 3C CE E8 52 6C 08 4B 
  38 B8 23 B0 0B 0B 0B 0B  0B 0B 0B 0B 0B 0B 0B 0B 
11:42:37.899 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - Padded data after encryption:  
  B8 31 C0 91 15 4E 08 AF  D3 31 DA EA 5F A9 77 03 
  B6 93 31 7E 20 77 BF FB  E1 9A 79 8E 3A 21 13 13 
  A6 EF 90 60 32 1A EE 84  1A 9A 2F 55 4B 2A DC 9D 
  C6 2A FD CD 8D B6 6C 63  42 D0 34 0A DA CD 21 6E 
11:42:37.899 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) was split into 1 record(s).
11:42:37.899 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - Sending collected records to the TLS peer: 
  16 03 03 00 40 B8 31 C0  91 15 4E 08 AF D3 31 DA 
  EA 5F A9 77 03 B6 93 31  7E 20 77 BF FB E1 9A 79 
  8E 3A 21 13 13 A6 EF 90  60 32 1A EE 84 1A 9A 2F 
  55 4B 2A DC 9D C6 2A FD  CD 8D B6 6C 63 42 D0 34 
  0A DA CD 21 6E 
11:42:37.912 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - Accepted 6 new bytes from server
11:42:37.913 [main] DEBUG de.rub.nds.tlsattacker.transport.SimpleTransportHandler - 14 03 03 00 01 01 
11:42:37.913 [main] DEBUG de.rub.nds.tlsattacker.tls.record.handlers.RecordHandler - The protocol message(s) were collected from 1 record(s). 
11:42:37.913 [main] DEBUG de.rub.nds.tlsattacker.tls.protocol.constants.ProtocolMessageType - Trying to get a protocol message handler for the following content type: CHANGE_CIPHER_SPEC
11:42:37.913 [main] DEBUG de.rub.nds.tlsattacker.tls.workflow.WorkflowExecutor - The following message was parsed: 
ChangeCipherSpec message:
  CCS Protocol Message: 01 
